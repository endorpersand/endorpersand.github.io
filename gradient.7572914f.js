const e=document.querySelector("#lin-result canvas").getContext("2d",{alpha:!1}),t=document.querySelector("#rms-result canvas").getContext("2d",{alpha:!1}),r=document.querySelector("#css-result div#css-gradient"),n=document.querySelector("button#coloradd"),o=document.querySelector("div#colors");function l(e=!0){let t=function(e="#000000"){let t=document.createElement("div"),r=document.createElement("input");r.type="color",r.value=e,r.addEventListener("change",i);let n=document.createElement("button");return n.classList.add("colorrm"),n.textContent="x",n.addEventListener("click",(()=>{o.removeChild(t);let e=c();if(e.length<3)for(let t of e)t.disabled=!0;i()})),t.append(r,n),t}();o.insertBefore(t,n);let r=c();if(r.length>2)for(let e of r)e.disabled=!1;return e&&i(),t}function c(){return document.querySelectorAll("button.colorrm")}function a(e,t,r){return Math.hypot(e*Math.sqrt(1-r),t*Math.sqrt(r))}function i(){const n=function(){let e=document.querySelectorAll("input[type=color]");return Array.from(e,(e=>e.value))}();r.style.background=`linear-gradient(0.25turn, ${n.join(", ")})`,d(e,"lin",n),d(t,"rms",n)}function d(e,t,r){const n=r.length-1,o=e.canvas;if("lin"===t){const t=e.createLinearGradient(0,0,o.width,0);for(var[l,c]of r.entries())t.addColorStop(l/n,c);e.fillStyle=t}else if("rms"===t){let t;"OffscreenCanvas"in globalThis?t=new OffscreenCanvas(o.width,1):(t=document.createElement("canvas"),[t.width,t.height]=[o.width,1]);const c=t.getContext("2d"),i=c.createImageData(t.width,1),d=new Uint32Array(i.data.buffer),u=d.length-1;for(var l=0;l<d.length;l++){const e=l/u*n,[t,o]=[Math.floor(e),e%1],[c,i]=[r[t],r[t+1]??"#000000"].map((e=>{return[(t=e).slice(1,3),t.slice(3,5),t.slice(5,7)].map((e=>parseInt(e,16)));var t})),s=Array.from({length:3},((e,t)=>a(c[t],i[t],o)));d[l]=-16777216|s[2]<<16|s[1]<<8|s[0]<<0}c.putImageData(i,0,0);const s=e.createPattern(t,"repeat-y");e.fillStyle=s}else{}e.fillRect(0,0,o.width,o.height)}function u(...e){let t=[...o.querySelectorAll("div")];if(e.length<2)throw new Error("Two colors are required for a gradient");for(;e.length<t.length;)t.pop()?.remove();for(;t.length<e.length;)t.push(l(!1));t.forEach(((t,r)=>{const n=t.querySelector("input[type=color]"),o=e[r];n.value=o})),i()}i(),document.querySelectorAll("input[type=color]").forEach((e=>e.addEventListener("change",i))),n.addEventListener("click",(()=>{l(!0)})),document.querySelectorAll(".colorrm").forEach((e=>e.addEventListener("click",(()=>{o.removeChild(e.parentElement);let t=c();if(t.length<3)for(let e of t)e.disabled=!0;i()})))),window.setColors=u,window.gay=function(){u("#FF0000","#FFFF00","#00FF00","#00FFFF","#0000FF","#FF00FF","#FF0000")};
//# sourceMappingURL=gradient.7572914f.js.map
