{"mappings":"imBAsBA,IAAuBA,EACDC,mJArBtB,IAAIC,EAAU,GAoBdF,WAlBkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,WAXiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,wKCIzD,MAAMC,EAAOC,EAAAC,OAAOD,EAAAE,KAUpB,IAAIC,EAAYC,SAASC,cAAc,eAClCC,EAASC,GAAWJ,EAAUK,iBAAiB,SAChDC,EAAYL,SAASC,cAAc,eACnCK,EAAUN,SAASC,cAAc,YACjCM,EAAYP,SAASC,cAAc,cACnCO,EAAeR,SAASC,cAAc,SACtCQ,EAAeT,SAASC,cAAc,cACtCS,EAAgBV,SAASC,cAAc,YAEvCU,EAAgB,CAACC,OAAO,EAAOC,KAAM,YCrBzCC,EAAiB,SAAUC,EAAWC,EAAQC,GAC5C,GAAID,IAAWE,KAAKC,SAASH,OAG3B,OAAOD,EAGP,IAAIK,EAASH,EAAQ,UAAYxB,KAAK4B,UAAUN,GAAa,IAAM,iBAAmBtB,KAAK4B,UAAUN,GAAa,KAClH,OAAOO,IAAIC,gBAAgB,IAAIC,KAAK,CAACJ,GAAS,CAC5CK,KAAM,6BCVZ,IAAIC,EAAG,IAAAJ,IAAuB/B,EAAA,SAAAoC,QAA6C,SAAOC,OAAAC,KAAAC,KAClFC,EAAiBjB,EAAUY,EAAIM,WAAYN,EAAIV,QAAQ,GFsBvD,IAAIiB,EAAU,IAAIC,OAAMH,YAUfI,EAAWC,EAAqBC,GACrC,GAAkB,iBAAdD,EAAKX,MAAuC,MAAZW,EAAKE,GAAY,CACjD,IAAKC,EAAGC,GAAKJ,EAAKK,KAClB,MAAM,GAAIF,EAAEG,MAAML,KAAWG,EAAEE,MAAML,eAGpCM,EAAiB9B,EAAc+B,EAAS,IAAKC,GAAc,GAChE,IAAIR,EAAUQ,EAAc,GAAK,CAACC,QAASX,GAE3C,IAEI,MAAO,CAACvB,OAAO,OAAMC,MADX,aAAelB,EAAKD,MAAMmB,GAAM6B,MAAML,IAElD,MACE,MAAO,CAACzB,OAAO,OAAOC,aAIrBkC,IACL,IACIC,EADO,IAAIhD,SAASI,iBAAiB,uBAEpC6C,QAAOC,GAAKA,EAAEC,UACdC,KAAIF,GAAKA,EAAEG,QAAO,GAEvB,OAAU,IAALL,GAAgBA,GACbvC,EAAa4C,eAGhBC,IACL/C,EAAUgD,UAAUC,IAAI,2BAGnBC,IACD,YAAaC,SACbA,QAAQC,mBAIPC,IACLjD,EAAMgC,EAAiBtC,EAAUgD,OAE7B1C,EAAIC,MACJN,EAAQuD,UAAS,KAAQlD,EAAImD,QAE7BxD,EAAQuD,UAAS,sBAGrBP,IACAG,aAGKM,IACL,GAAIpD,EAAIC,MAAO,CACX,IAAIoD,EAAqB,CAACrD,EAAIE,KAAMkC,KAAU7C,EAAQmD,OAAQlD,EAAQkD,OACtEpB,EAAQgC,YAAYD,GACpBzD,EAAUgD,UAAUW,OAAO,kBAC3B3D,EAAUsD,UAAY,kBAEtBM,aAICA,IACL5D,EAAUsD,UAAS,sBACnBJ,aAuBKW,IACL3D,EAAa4D,UAAY7D,EAAa2C,QACtCG,IAhGJpD,EAAQoE,iBAAiB,QAAShB,GAClCnD,EAAQmE,iBAAiB,QAAShB,GAClCjD,EAAUiE,iBAAiB,QAASV,GACpC5D,SAASI,iBAAiB,sBAAsBmE,SAAQrF,GAAKA,EAAEoF,iBAAiB,SAAUF,KAC1F1D,EAAc4D,iBAAiB,QAASP,GACxCH,IACAG,IAoEA9B,EAAQuC,UAAY,SAAStB,GACzB3C,EAAUgD,UAAUW,OAAO,OAC3B,IAAIO,EAAO9B,EAAiBO,EAAEwB,KAAM,YAAY,GAC5CD,EAAK7D,OACLL,EAAUoE,YAAW,KAAQF,EAAKX,QAClCL,KAEAU,KAGRlC,EAAQ2C,QAAU,SAAS1B,GACvB,IAAI2B,EAAM3B,EAAE4B,QACRC,EAAQF,EAAIG,QAAQ,cACpBC,EAAMJ,EAAIK,MAAMH,EAAQ,KACxBE,EAAIE,SAAS,MAAQF,EAAIE,SAAS,QAClCN,GAAO,yBAEXtE,EAAUoE,YAAcE,EACxBtE,EAAUgD,UAAUC,IAAI","sources":["node_modules/.pnpm/@parcel+runtime-js@2.3.2_@parcel+core@2.3.2/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/.pnpm/@parcel+runtime-js@2.3.2_@parcel+core@2.3.2/node_modules/@parcel/runtime-js/lib/runtime-d374f67546d0ed20.js","src/taylor2/display.ts","node_modules/.pnpm/@parcel+runtime-js@2.3.2_@parcel+core@2.3.2/node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/.pnpm/@parcel+runtime-js@2.3.2_@parcel+core@2.3.2/node_modules/@parcel/runtime-js/lib/runtime-9e91dd5be6549b4b.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2NAB1\\\":\\\"taylor2.99aec932.js\\\",\\\"1Yv3L\\\":\\\"calc.4705fe09.js\\\",\\\"2KAe5\\\":\\\"complexgrapher.43211060.js\\\"}\"));","import { create, all } from \"mathjs\";\nimport { TaylorMessage } from \"./calc\";\n\ndeclare var MathJax: any;\nconst math = create(all);\ntype MaybeTex = {\n    valid: false,\n    expr: string,\n} | {\n    valid: true,\n    expr: string,\n    tex: string\n};\n\nlet centerDiv = document.querySelector(\"#centerDiv\")!      as HTMLDivElement,\n    [centerX, centerY] = centerDiv.querySelectorAll(\"input\"),\n    funcInput = document.querySelector(\"#func input\")!     as HTMLInputElement,\n    funcTex = document.querySelector(\"#funcTex\")!          as HTMLDivElement,\n    resultTex = document.querySelector(\"#resultTex\")!      as HTMLDivElement,\n    approxNRadio = document.querySelector(\"#appn\")!        as HTMLInputElement,\n    approxNInput = document.querySelector(\"#appninput\")!   as HTMLInputElement,\n    computeButton = document.querySelector(\"#compute\")!    as HTMLButtonElement;\n\nlet tex: MaybeTex = {valid: false, expr: \"\"};\nlet swiftie = new Worker(new URL(\"./calc\", import.meta.url), {type: \"module\"});\n\ncenterX.addEventListener(\"input\", grayResult);\ncenterY.addEventListener(\"input\", grayResult);\nfuncInput.addEventListener(\"input\", updateFuncTex);\ndocument.querySelectorAll(\"input[name=approx]\").forEach(i => i.addEventListener(\"change\", radioUpdate));\ncomputeButton.addEventListener(\"click\", updateResultTex);\nupdateFuncTex();\nupdateResultTex();\n\nfunction texHandler(node: math.MathNode, options?: object) {\n    if (node.type === \"OperatorNode\" && node.op === \"*\") {\n        let [x, y] = node.args;\n        return `${x.toTex(options)}${y.toTex(options)}`;\n    }\n}\nfunction verifyExpression(expr: string, replEq = \"=\", explicitMul = true): MaybeTex {\n    let options = explicitMul ? {} : {handler: texHandler};\n\n    try {\n        let tex = \"f(x, y) = \" + math.parse(expr).toTex(options);\n        return {valid: true, expr, tex};\n    } catch {\n        return {valid: false, expr};\n    }\n}\n\nfunction findN() {\n    let rads = [...document.querySelectorAll(\"input[name=approx]\")];\n    let v = (rads as HTMLInputElement[])\n        .filter(e => e.checked)\n        .map(e => e.value)[0];\n    \n    if (+v != 0) return +v;\n    return +approxNInput.value;\n}\n\nfunction grayResult() {\n    resultTex.classList.add(\"notCurrentFunc\");\n}\n\nfunction updateTex() {\n    if (\"typeset\" in MathJax) {\n        MathJax.typeset();\n    }\n}\n\nfunction updateFuncTex() {\n    tex = verifyExpression(funcInput.value);\n\n    if (tex.valid) {\n        funcTex.innerHTML = `$$${tex.tex}$$`;\n    } else {\n        funcTex.innerHTML = `$$\\\\color{red}{?}$$`\n    }\n\n    grayResult();\n    updateTex();\n}\n\nfunction updateResultTex() {\n    if (tex.valid) {\n        let dat: TaylorMessage = [tex.expr, findN(), +centerX.value, +centerY.value];\n        swiftie.postMessage(dat);\n        resultTex.classList.remove(\"notCurrentFunc\");\n        resultTex.innerHTML = \"Working...\";\n    } else {\n        invalidResult();\n    }\n}\n\nfunction invalidResult() {\n    resultTex.innerHTML = `$$\\\\color{red}{?}$$`;\n    updateTex();\n}\n\nswiftie.onmessage = function(e) {\n    resultTex.classList.remove(\"err\");\n    let rtex = verifyExpression(e.data, \"\\\\approx\", false);\n    if (rtex.valid) {\n        resultTex.textContent = `$$${rtex.tex}$$`;\n        updateTex();\n    } else {\n        invalidResult();\n    }\n}\nswiftie.onerror = function(e) {\n    let msg = e.message;\n    let index = msg.indexOf(\"Undefined \");\n    let sym = msg.slice(index + \"Undefined symbol \".length); // can also be \"Undefined function\", but not that big of a deal\n    if (sym.includes(\"x\") || sym.includes(\"y\")) {\n        msg += \" (try adding * here?)\"\n    }\n    resultTex.textContent = msg;\n    resultTex.classList.add(\"err\");\n}\nfunction radioUpdate() {\n    approxNInput.disabled = !approxNRadio.checked;\n    grayResult();\n}","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1Yv3L\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);"],"names":["$6ed8142c06ab9d4a$export$6503ec6e8aabbaf","$6ed8142c06ab9d4a$export$f7ad0328861e2f03","$6ed8142c06ab9d4a$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$33cab1dcad203a7a$var$math","$k4H8V","create","all","$33cab1dcad203a7a$var$centerDiv","document","querySelector","$33cab1dcad203a7a$var$centerX","$33cab1dcad203a7a$var$centerY","querySelectorAll","$33cab1dcad203a7a$var$funcInput","$33cab1dcad203a7a$var$funcTex","$33cab1dcad203a7a$var$resultTex","$33cab1dcad203a7a$var$approxNRadio","$33cab1dcad203a7a$var$approxNInput","$33cab1dcad203a7a$var$computeButton","$33cab1dcad203a7a$var$tex","valid","expr","$e4e02d858b02bbdc$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$cf8cc6e2ac59c118$var$url","resolve","import","meta","url","$cf8cc6e2ac59c118$exports","toString","$33cab1dcad203a7a$var$swiftie","Worker","$33cab1dcad203a7a$var$texHandler","node","options","op","x","y","args","toTex","$33cab1dcad203a7a$var$verifyExpression","replEq","explicitMul","handler","$33cab1dcad203a7a$var$findN","v","filter","e","checked","map","value","$33cab1dcad203a7a$var$grayResult","classList","add","$33cab1dcad203a7a$var$updateTex","MathJax","typeset","$33cab1dcad203a7a$var$updateFuncTex","innerHTML","tex","$33cab1dcad203a7a$var$updateResultTex","dat","postMessage","remove","$33cab1dcad203a7a$var$invalidResult","$33cab1dcad203a7a$var$radioUpdate","disabled","addEventListener","forEach","onmessage","rtex","data","textContent","onerror","msg","message","index","indexOf","sym","slice","includes"],"version":3,"file":"taylor2.99aec932.js.map"}