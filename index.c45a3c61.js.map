{"mappings":"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","sources":["node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_class_call_check.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_create_class.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_define_property.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_array_with_holes.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_iterable_to_array.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_non_iterable_rest.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_array_like_to_array.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_sliced_to_array.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_array_without_holes.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_non_iterable_spread.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_to_consumable_array.mjs","src/index/boxes.ts"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n","import _arrayLikeToArray from './_array_like_to_array.mjs';\n\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\n","import arrayWithHoles from './_array_with_holes.mjs';\nimport iterableToArrayLimit from './_iterable_to_array.mjs';\nimport nonIterableRest from './_non_iterable_rest.mjs';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array.mjs';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n","import _arrayLikeToArray from './_array_like_to_array.mjs';\n\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","import arrayWithoutHoles from './_array_without_holes.mjs';\nimport iterableToArray from './_iterable_to_array.mjs';\nimport nonIterableSpread from './_non_iterable_spread.mjs';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array.mjs';\n\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n","type Coord = [number, number]; // each cell is 1 unit\ntype NormCoord = [number, number]; // the entire wrapper 1 unit\ntype RGB = [number, number, number];\n\nconst boxGridEl = document.querySelector('.box-grid')!;\n\nclass SquareTracker {\n    private static _MIN_ROWS = 3;\n    private _cols: number;\n    readonly projectSquares: HTMLElement[];\n    placeholderSquares: HTMLElement[];\n    corners: [RGB, RGB, RGB, RGB] = [ // top right, bottom right, top left, bottom left\n        [0x77, 0x77, 0x77],\n        [0x77, 0x77, 0x77],\n        [0x77, 0x77, 0x77],\n        [0x77, 0x77, 0x77]\n    ];\n\n    constructor() {\n        this._cols = +getComputedStyle(document.documentElement).getPropertyValue('--cols');\n\n        this.projectSquares = [...boxGridEl.querySelectorAll('a')];\n        for (let s of this.projectSquares) {\n            let colhex = document.createElement('span');\n            colhex.classList.add('colhex');\n\n            // allow ppl to copy if they want\n            colhex.addEventListener(\"click\", e => {\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            s.appendChild(colhex);\n\n            s.classList.add('box');\n        }\n\n        this.placeholderSquares = [];\n        for (let i = this.squares; i < (this.cols * SquareTracker._MIN_ROWS); i++) {\n            this._addSquare();\n        }\n    }\n\n    get squares() {\n        return this.projectSquares.length + this.placeholderSquares.length;\n    }\n\n    get cols() {\n        return this._cols;\n    }\n    set cols(value) {\n        if (value != this._cols) {\n            this._cols = value;\n            this._rebalance();\n        }\n    }\n\n    get rows(): number {\n        return this.squares / this.cols;\n    }\n\n    private _addSquare() {\n        let box = document.createElement('div');\n        let title = document.createElement('div');\n        let desc = document.createElement('div');\n        let colhex = document.createElement('span');\n        \n        title.classList.add('title');\n        desc.classList.add('desc');\n        colhex.classList.add('colhex');\n        \n        box.classList.add('box');\n        box.append(title, desc, colhex);\n        box.addEventListener(\"click\", this.regenColors.bind(this, false));\n\n        // allow ppl to copy if they want\n        colhex.addEventListener(\"click\", e => e.stopPropagation());\n    \n        boxGridEl.appendChild(box);\n        this.placeholderSquares.push(box);\n    }\n\n    private _removeSquare() {\n        this.placeholderSquares.pop()?.remove();\n    }\n\n    private _rebalance() {\n        let squares = this.squares;\n        // n = number of squares that should be on board\n        let n = Math.max(this._cols * SquareTracker._MIN_ROWS, this.projectSquares.length);\n        n = Math.ceil(n / this._cols) * this._cols;\n\n        if (squares == n) return;\n        if (squares > n) {\n            for (let i = squares; i > n; i--) {\n                this._removeSquare();\n            }\n        } else if (squares < n) {\n            for (let i = squares; i < n; i++) {\n                this._addSquare();\n            }\n        }\n\n        this.regenColors(true);\n    }\n\n    forEach(callback: (value: HTMLElement, index: number) => void) {\n        let i = 0;\n        for (let e of this.projectSquares) callback(e, i++);\n        for (let e of this.placeholderSquares) callback(e, i++);\n    }\n\n    regenColors(useCurrentCorners: boolean = false) {\n        if (!useCurrentCorners) this.corners = Array.from({length: 4}, () => randRGB(0x50)) as [RGB, RGB, RGB, RGB];\n        let corners = this.corners;\n        \n        if (this._cols < 3) {\n            // use TL + BR boxes rather than the corners to make a consistent grid (rather than 2 columns of color)\n            let corners2: [RGB, RGB] = [corners[2], corners[1]];\n            this.assignColors(i => interpolate2(corners2, asCoord(i)), useCurrentCorners);\n        } else {\n            this.assignColors(i => interpolate4(corners, asNormCoord(i)), useCurrentCorners);\n        }\n\n    }\n\n    assignColors(callback: (cellIndex: number) => RGB, skipTransition = false) {\n        squares.forEach((s, i) => {\n            let clr = callback(i);\n            if (skipTransition) {\n                s.classList.add(\"no-transition\");\n                s.offsetHeight;\n            }\n            s.style.backgroundColor = hex(clr);\n    \n            s.querySelector('.colhex')!.textContent = hex(clr);\n        });\n\n        if (skipTransition) {\n            // return transition after color change\n            requestAnimationFrame(() => { // this is called before update\n                requestAnimationFrame(() => { // this is called after update\n                    squares.forEach(s => {\n                        s.classList.remove(\"no-transition\");\n                    });\n                });\n            });\n        }\n    }\n\n}\nlet squares = new SquareTracker();\nsquares.regenColors();\n\nwindow.addEventListener(\"resize\", e => {\n    squares.cols = +getComputedStyle(boxGridEl).getPropertyValue('--cols');\n})\nfunction asCoord(i: number): Coord {\n    // takes an index in the array, maps it to its [row, col] value\n    return [Math.floor(i / squares.cols), i % squares.cols];\n}\nfunction asNormCoord(i: number): NormCoord {\n    // takes an index in the array, maps it to its NormCoord value\n    let [r, c] = asCoord(i);\n    return [r / (squares.rows - 1), c / (squares.cols - 1)];\n}\n\nfunction randInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nfunction randRGB(min = 0, max = 256): RGB {\n    // [min, max)\n    return Array.from({length: 3}, () => randInt(min, max)) as RGB;\n}\nfunction hex(arr: RGB) {\n    // converts rgb array => hex notation\n    return `#${arr.map(x => Math.round(x).toString(16).padStart(2, \"0\")).join('')}`\n}\n\nfunction zip<A extends any[]>(...v: {[I in keyof A]: A[I][]}): A[] {\n    let length = v[0].length;\n    return Array.from({length}, (_, i) => v.map(a => a[i]) as A);\n}\n\nfunction lerp<T extends number[]>(pts: [T, T], dist: number): T {\n    let [p, q] = pts;\n    let length = p.length;\n    return Array.from({length}, (_, i) => {\n        let a = p[i], b = q[i];\n        return a + dist * (b - a);\n    }) as T;\n}\n\nfunction bilerp<T extends number[]>(pts: [T, T, T, T], c: NormCoord): T {\n    type ArrPair = [T, T];\n    let [px, py] = c;\n    let [top, bottom] = [pts.slice(0, 2) as ArrPair, pts.slice(2, 4) as ArrPair]\n    return lerp([lerp(bottom, px), lerp(top, px)], py);\n}\n\n// interpolate given that each corner is assigned a color\nfunction interpolate4(clrs: [RGB, RGB, RGB, RGB], c: NormCoord) {\n    // weight = how much each of the 4 points are valued based on the distance point c is from the corner\n    let weights = bilerp<[number, number, number, number]>([\n        [1,0,0,0],\n        [0,1,0,0],\n        [0,0,1,0],\n        [0,0,0,1]\n    ], c);\n\n    return Array.from({length: 3}, (_, i) => {\n        let channels = clrs.map(clr => clr[i]);\n\n        let sqsum = zip(channels, weights)\n            .map(([c, w]) => w * c * c)\n            .reduce((acc, cv) => acc + cv);\n        \n        return Math.round(Math.sqrt(sqsum));\n    }) as RGB;\n}\n\nfunction manhattan(p: Coord, q: Coord): number {\n    return zip(p, q)\n        .map(([px, qx]) => Math.abs(px - qx))\n        .reduce((acc, cv) => acc + cv);\n}\n\n// interpolate given that the top left and bottom right are assigned colors\nfunction interpolate2(clrs: [RGB, RGB], c: Coord) {\n    // weight = how much each of the 2 points are valued based on the distance point c is from the corner\n    let [aw, bw] = [\n        manhattan([0, 0], c),\n        manhattan([squares.rows - 1, squares.cols - 1], c),\n    ];\n    let weights = [\n        bw / (aw + bw), // note, flipped\n        aw / (aw + bw)\n    ];\n\n    return Array.from({length: 3}, (_, i) => {\n        let channels = clrs.map(clr => clr[i]);\n\n        let sqsum = zip(channels, weights)\n            .map(([c, w]) => w * c * c)\n            .reduce((acc, cv) => acc + cv);\n        \n        return Math.round(Math.sqrt(sqsum));\n    }) as RGB;\n}\n\nexport {}; // recognize as module"],"names":["$e1e42d428095513c$export$2e2bcd8739ae039","instance","Constructor","TypeError","$34a7a9bd8cc11afd$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$f299933add3670f1$export$2e2bcd8739ae039","obj","value","$5daec9f6cbed6cd4$export$2e2bcd8739ae039","arr","Array","isArray","$a143715458c708ee$export$2e2bcd8739ae039","iter","Symbol","iterator","from","$32f00be0b61b76cc$export$2e2bcd8739ae039","$79cee1a838c2c20a$export$2e2bcd8739ae039","len","arr2","$67456225a28b1315$export$2e2bcd8739ae039","o","minLen","n","prototype","toString","call","slice","constructor","name","test","$6c928caf6d7b81fa$export$2e2bcd8739ae039","$53a704e7816323fd$export$2e2bcd8739ae039","$c713d431f94f06dd$export$2e2bcd8739ae039","$0408bdcfe5a1cecd$export$2e2bcd8739ae039","$b2ecc1262834a993$var$boxGridEl","document","querySelector","$b2ecc1262834a993$var$SquareTracker","SquareTracker","this","_cols","getComputedStyle","documentElement","getPropertyValue","projectSquares","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","s","colhex","createElement","classList","add","addEventListener","e","preventDefault","stopPropagation","appendChild","err","return","placeholderSquares","squares","cols","_MIN_ROWS","_addSquare","protoProps","staticProps","_rebalance","box","title","desc","append","regenColors","bind","push","ref","pop","remove","squares1","Math","max","ceil","_removeSquare","i1","callback","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","err1","useCurrentCorners","arguments","corners","$b2ecc1262834a993$var$randRGB","corners2","assignColors","$b2ecc1262834a993$var$interpolate2","$b2ecc1262834a993$var$asCoord","$b2ecc1262834a993$var$interpolate4","$b2ecc1262834a993$var$asNormCoord","skipTransition","$b2ecc1262834a993$var$squares","forEach","clr","offsetHeight","style","backgroundColor","$b2ecc1262834a993$var$hex","textContent","requestAnimationFrame","floor","r","c","rows","$b2ecc1262834a993$var$randInt","min","random","concat","map","x","round","padStart","join","$b2ecc1262834a993$var$zip","_len","v","_key","_","a","$b2ecc1262834a993$var$lerp","pts","dist","_pts","p","q","b","clrs","weights","_c","px","py","top","$b2ecc1262834a993$var$bilerp","sqsum","param","_$c","_param","reduce","acc","cv","sqrt","$b2ecc1262834a993$var$manhattan","qx","abs","aw","bw","window"],"version":3,"file":"index.c45a3c61.js.map"}