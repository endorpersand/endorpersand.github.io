{"mappings":"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","sources":["node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-ebf94ac01712eea4.js","src/complexgrapher/complexgrapher.ts","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-2fbe291746b8d227.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-d76853abe3dd4514.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-414f81c63299e445.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"fujT7\\\":\\\"complexgrapher.0fe400eb.js\\\",\\\"dq1cl\\\":\\\"webkitTest.5c78f70c.js\\\",\\\"egthy\\\":\\\"main.bd6a98bf.js\\\",\\\"1GZwD\\\":\\\"main.66bf90c5.js\\\",\\\"ainsM\\\":\\\"chunkloader.d3595d56.js\\\",\\\"bumwR\\\":\\\"chunkloader.12de479c.js\\\",\\\"2KAe5\\\":\\\"complexgrapher.c1802b56.js\\\"}\"));","import { create, all } from \"mathjs\";\nimport { Complex, ComplexFunction, InitIn, InitOut, LoaderOut, MainIn, MainOut, PartialEvaluator } from \"./types\";\nconst math = create(all);\n\nconst wrapper     = document.querySelector('#wrapper')!     as HTMLDivElement,\n      funcForm    = document.querySelector('#funcForm')!    as HTMLFormElement,\n      input       = funcForm.querySelector('input')!        as HTMLInputElement,\n      graphButton = document.querySelector('#graphButton')! as HTMLButtonElement,\n      zcoord      = document.querySelector('#zcoord')!      as HTMLDivElement,\n      zoomButtons = document.querySelectorAll('button.zoom'),\n      zoomForm    = document.querySelector('#zoomForm')!    as HTMLFormElement,\n      zoomInput   = zoomForm.querySelector('input')!        as HTMLInputElement,\n      scaleForm   = document.querySelector('#scaleForm')!   as HTMLFormElement,\n      scaleInput  = scaleForm.querySelector('input')!       as HTMLInputElement,\n      warning     = document.querySelector('#warning')!     as HTMLDivElement,\n      domain      = document.querySelectorAll('.domain');\n\nconst canvas = document.createElement(\"canvas\");\nconst ctx = canvas.getContext('2d', {alpha: false})!;\nwrapper.appendChild(canvas);\n\n/**\n * The default domain of the image at zoom 1\n */\nconst defaultDomain: [Complex, Complex] = [\n    math.complex('-2-2i'), \n    math.complex('2+2i'),\n] as any;\n\n/**\n * The default radius.\n */\nconst radiusThreshold = 250;\n/**\n * The radius the calculator will default to for the image. \n * \n * Typically 250 (so 501 x 501), but if window is small enough, this falls back to the window's width.\n */\nlet defaultRadius = computeDefRadius();\nfunction computeDefRadius() {\n    let padding = parseInt(getComputedStyle(wrapper).padding);\n    return Math.min(\n        radiusThreshold, \n        (document.documentElement.clientWidth - 1) / 2 - padding // size of the window / 2, minus padding\n    );\n}\n\nscaleInput.value = \"\" + defaultRadius;\n\n/**\n * The zoom of the image (which affects the domain, but not the dimensions of the image)\n * \n * Increase: zoom in\n * \n * Decrease: zoom out\n */\nlet zoom = 1;\n\n/**\n * Function that takes the input complex value to the output one\n * This is only used for console.log\n * @param z input\n * @returns output\n */\nlet d: ComplexFunction = (z => z);\n\nlet worker: Worker;\nlet canNest: boolean;\nlet time: number; // only used in fallback\n\n// On WebKit (iOS), nested Workers are not supported. So test if they are supported,\n// and if not, use the fallback that doesn't use nested Workers.\n\n/**\n * On WebKit (iOS), nested Workers are not supported. So this worker tests if they are supported.\n * The result is then used to determine whether or not to use the full main worker or a fallback.\n */\nlet webkitTest = new Worker(new URL(\"./worker/webkitTest\", import.meta.url), {type: \"module\"});\nwebkitTest.postMessage(undefined);\nwebkitTest.onmessage = async function (e: MessageEvent<boolean>) {\n    zcoord.textContent = \"Initializing workers...\";\n    await waitPageUpdate();\n    canNest = e.data;\n\n    worker = canNest \n        ? new Worker(new URL(\"./worker/main\", import.meta.url), {type: \"module\"}) \n        : new Worker(new URL(\"./worker/chunkLoader\", import.meta.url), {type: \"module\"});\n    \n    await initWorker(worker);\n\n    if (canNest) {\n        worker.onmessage = function (e: MessageEvent<MainOut>) {\n            let msg: MainOut = e.data;\n        \n            if (msg.action === \"chunkDone\") {\n                displayChunk(msg);\n            } else if (msg.action === \"done\") {\n                markDone(msg.time);\n            } else {\n                let _: never = msg;\n            }\n        }\n    } else {\n        worker.onmessage = function (e: MessageEvent<LoaderOut>) {\n            displayChunk(e.data);\n            markDone(Math.trunc(performance.now() - time));\n        }\n    }\n    \n    worker.onerror = onComputeError;\n    graphButton.disabled = false;\n    graphButton.click();\n    webkitTest.terminate();\n}\n\n/**\n * Event listener that displays the complex coordinate of the mouse's current position.\n */\n function coordinateDisplay(e: MouseEvent) {\n    let cx = e.pageX - canvas.offsetLeft;\n    let cy = e.pageY - canvas.offsetTop;\n\n    zcoord.classList.remove('error');\n    zcoord.textContent = 'z = ';\n    \n    const code = document.createElement(\"code\");\n    code.append(\"\" + convPlanes(cx, cy));\n    zcoord.append(code);\n};\ncanvas.addEventListener('mousemove', coordinateDisplay);\ncanvas.addEventListener('click', e => {\n    let cx = e.pageX - canvas.offsetLeft;\n    let cy = e.pageY - canvas.offsetTop;\n\n    let z = convPlanes(cx, cy);\n    console.log(`z = ${z},\\nf(z) = ${d(z)}`);\n});\n\n\n// Function input handlers:\ninput.addEventListener('input', () => {\n    input.value = input.value.replace(/[^a-zA-Z0-9+\\-*/^., ()]/g, '');\n});\nfuncForm.addEventListener('submit', e => {\n    e.preventDefault();\n    graphButton.click();\n});\n\n// zoom in\nzoomButtons[0].addEventListener('click', () => {\n    zoom *= 2;\n    graphButton.click();\n});\n// reset zoom\nzoomButtons[1].addEventListener('click', () => {\n    if (zoom !== 1) {\n        zoom = 1;\n        graphButton.click();\n    }\n});\n// zoom out\nzoomButtons[2].addEventListener('click', () => {\n    zoom /= 2;\n    graphButton.click();\n});\n\n// arbitrary zoom\nzoomInput.addEventListener('input', () => {\n    zoomInput.value = zoomInput.value.replace(/[^0-9.]/g, '');\n    if (isNaN(+scaleInput.value)) zoomInput.value = \"1\";\n\n    if ([...zoomInput.value].filter(x => x === '.').length > 1) {\n        var ziArray = zoomInput.value.split('.');\n        zoomInput.value = ziArray[0] + '.' + ziArray.slice(1).join('');\n    }\n});\nzoomForm.addEventListener('submit', e => {\n    e.preventDefault();\n    if (zoom !== +zoomInput.value) {\n    zoom = +zoomInput.value || 0;\n    graphButton.click();\n    }\n});\n\n// scale handler:\nscaleInput.addEventListener('input', () => {\n    if (isNaN(+scaleInput.value)) scaleInput.value = \"\" + defaultRadius;\n    warning.style.display = +scaleInput.value > radiusThreshold ? 'inline' : 'none';\n});\nscaleForm.addEventListener('submit', e => {\n    e.preventDefault();\n    let size = +scaleInput.value * 2 + 1;\n    if (canvas.width !== size) {\n    canvas.width = canvas.height = size;\n    graphButton.click();\n    }\n});\n\nlet resizeCheck: NodeJS.Timer | undefined;\nwindow.addEventListener(\"resize\", e => {\n    if (typeof resizeCheck !== \"undefined\") clearTimeout(resizeCheck);\n\n    defaultRadius = computeDefRadius();\n    scaleInput.value = \"\" + defaultRadius;\n    warning.style.display = +scaleInput.value > radiusThreshold ? 'inline' : 'none';\n\n    // if resize is done then perform recompute\n    resizeCheck = setTimeout(() => graphButton.click(), 50);\n});\n\ngraphButton.addEventListener('click', async () => {\n    if (!canNest) graphButton.disabled = true;\n\n    zcoord.classList.remove('error');\n    zoomInput.value = zoom.toString();\n\n    let size = +scaleInput.value * 2 + 1;\n    if (canvas.width !== size) canvas.width = canvas.height = size;\n    [domain[0].textContent, domain[1].textContent] = defaultDomain.map(x => x.div(zoom).toString());\n    zcoord.textContent = 'Graphing...'\n    await waitPageUpdate();\n    canvas.removeEventListener('mousemove', coordinateDisplay);\n\n    let fstr = input.value;\n    try {\n        d = math.evaluate(`f(z) = ${fstr}`);\n        startWorker(worker, fstr);\n    } catch (e) {\n        onComputeError(e as any);\n        throw e;\n    }\n});\n\n/**\n * @returns a promise that resolves when the DOM updates displaying\n */\nasync function waitPageUpdate() {\n    return new Promise<void>(resolve => {\n        requestAnimationFrame(() => { // this is called before update\n            requestAnimationFrame(() => resolve()); // this is called after update\n        });\n    })\n}\n\n/**\n * Converts xy canvas pixels to values in the complex plane\n * @param x x coord\n * @param y y coord\n * @returns Complex value\n */\nfunction convPlanes(x: number, y: number) {\n    //converts xy pixel plane to complex plane\n\n    // let cmx =  (row - rx) / (rx / 2) / scale,\n    //     cmy = -(col - ry) / (ry / 2) / scale;\n\n    // row - rx: distance from center, in canvas pixels\n    // / (rx / 2): normalizes that so the edge is 2\n    // / scale: scale mult.\n\n    let [rx, ry] = [(canvas.width - 1) / 2, (canvas.height - 1) / 2];\n    let cmx =  (x - rx) / (rx / 2) / zoom,\n        cmy = -(y - ry) / (ry / 2) / zoom;\n    return math.complex(cmx, cmy) as unknown as Complex;\n}\n\n/**\n * Call an \"init\" action on a worker to prepare it for work.\n * @param w Worker to initialize.\n * @returns promise that resolves once it finishes initialization.\n */\nasync function initWorker(w: Worker) {\n    let init: InitIn = { action: \"init\" };\n    w.postMessage(init);\n\n    return new Promise<void>(resolve => {\n        w.onmessage = function(e: MessageEvent<InitOut>) {\n            resolve();\n        }\n    });\n}\n\n/**\n * Instruct the worker to begin processing a function.\n * @param w the worker to instruct.\n * @param fstr the function input\n */\nfunction startWorker(w: Worker, fstr: string) {\n    if (!canNest) time = performance.now();\n\n    let msg: MainIn = {\n        action: \"mainRequest\",\n        pev: partialEvaluate(fstr), \n        cd: {\n        width: canvas.width,\n        height: canvas.height,\n        zoom\n    }};\n    w.postMessage(msg);\n}\n\n/**\n * Take a string and evaluate it for speed. Simplify the string and also apply the reciprocal optimization.\n * This partial evaluation can then be fully evaluated in the workers.\n * @param fstr string to partially evaluate\n * @returns partially evaluated string\n */\nfunction partialEvaluate(fstr: string): PartialEvaluator {\n    let node = math.simplify(fstr);\n    let fnode = math.parse(\"f(z) = 0\") as math.FunctionAssignmentNode;\n\n    let inverse = false;\n    if (node.type == \"OperatorNode\" && node.fn == 'divide' && !isNaN(+node.args[0])) { // reciprocal func\n        node.args.reverse();\n        node = math.simplify(node);\n        inverse = true;\n    }\n\n    fnode.expr = node;\n    return { fstr: fnode.toString(), inverse };\n}\n\n/**\n * Display a done message with how long it took to complete\n * @param t time (in ms) it took for the operation to complete\n */\nfunction markDone(t: number) {\n    zcoord.textContent = `Done in ${t}ms.`;\n    reenableHover();\n}\n\n/**\n * Handle errors in computation\n * @param e the error\n */\nfunction onComputeError(e: Error | ErrorEvent) {\n    let err = e instanceof ErrorEvent ? e.message : e;\n\n    canvas.removeEventListener('mousemove', coordinateDisplay);\n    zcoord.classList.add('error');\n    zcoord.textContent = String(err);\n    reenableHover();\n}\n\n/**\n * Reenable interactability after an error\n * @param after how many ms before hover and interactibility should reenable\n */\nfunction reenableHover(after = 500) {\n    setTimeout(() => {\n        canvas.addEventListener('mousemove', coordinateDisplay);\n        if (!canNest) graphButton.disabled = false;\n    }, after);\n}\n\n/**\n * Update the canvas with the loaded chunk\n * @param data the data from the worker\n */\nfunction displayChunk(data: LoaderOut) {\n    let {chunk, buf} = data;\n\n    let dat = new ImageData(new Uint8ClampedArray(buf), chunk.width, chunk.height);\n    ctx.putImageData(dat, chunk.offx, chunk.offy);\n}","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dq1cl\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"egthy\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ainsM\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);"],"names":["$ccdddb66dd5c9e59$export$6503ec6e8aabbaf","$ccdddb66dd5c9e59$export$f7ad0328861e2f03","$ccdddb66dd5c9e59$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$jPsve","$7b066cf9bf825db5$var$math","create","all","$7b066cf9bf825db5$var$wrapper","document","querySelector","$7b066cf9bf825db5$var$funcForm","$7b066cf9bf825db5$var$input","$7b066cf9bf825db5$var$graphButton","$7b066cf9bf825db5$var$zcoord","$7b066cf9bf825db5$var$zoomButtons","querySelectorAll","$7b066cf9bf825db5$var$zoomForm","$7b066cf9bf825db5$var$zoomInput","$7b066cf9bf825db5$var$scaleForm","$7b066cf9bf825db5$var$scaleInput","$7b066cf9bf825db5$var$warning","$7b066cf9bf825db5$var$domain","$7b066cf9bf825db5$var$canvas","createElement","$7b066cf9bf825db5$var$ctx","getContext","alpha","appendChild","$7b066cf9bf825db5$var$defaultDomain","complex","$7b066cf9bf825db5$var$defaultRadius","$7b066cf9bf825db5$var$computeDefRadius","padding","parseInt","getComputedStyle","Math","min","documentElement","clientWidth","value","$7b066cf9bf825db5$var$worker","$7b066cf9bf825db5$var$canNest","$7b066cf9bf825db5$var$time","$7b066cf9bf825db5$var$zoom","$7b066cf9bf825db5$var$d","z","$3c5948be07c71a88$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$392807f48fc53276$var$url","resolve","import","meta","url","$392807f48fc53276$exports","toString","$7b066cf9bf825db5$var$webkitTest","Worker","postMessage","undefined","$ce2028ebd3de55c5$var$url","$ce2028ebd3de55c5$exports","$7b066cf9bf825db5$var$resizeCheck","$19e0631a78af0647$var$url","$7b066cf9bf825db5$var$coordinateDisplay","e","cx","pageX","offsetLeft","cy","pageY","offsetTop","classList","remove","textContent","code","append","$7b066cf9bf825db5$var$convPlanes","async","$7b066cf9bf825db5$var$waitPageUpdate","Promise","requestAnimationFrame","x","y","rx","ry","width","height","cmx","cmy","$7b066cf9bf825db5$var$partialEvaluate","fstr","node","simplify","fnode","inverse","fn","isNaN","args","reverse","expr","$7b066cf9bf825db5$var$markDone","t","$7b066cf9bf825db5$var$reenableHover","$7b066cf9bf825db5$var$onComputeError","err","ErrorEvent","message","removeEventListener","add","String","after","setTimeout","addEventListener","disabled","$7b066cf9bf825db5$var$displayChunk","data","chunk","buf","dat","ImageData","Uint8ClampedArray","putImageData","offx","offy","$19e0631a78af0647$exports","onmessage","e1","w","init","action","$7b066cf9bf825db5$var$initWorker","msg","time","trunc","performance","now","onerror","click","terminate","console","log","replace","preventDefault","filter","ziArray","split","slice","join","style","display","size","window","clearTimeout","map","div","evaluate","pev","cd","$7b066cf9bf825db5$var$startWorker"],"version":3,"file":"complexgrapher.0fe400eb.js.map"}