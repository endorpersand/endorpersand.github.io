{"mappings":"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","sources":["src/index/boxes.ts","node_modules/.pnpm/@parcel+transformer-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["type Coord = [number, number]; // each cell is 1 unit\ntype NormCoord = [number, number]; // the entire wrapper 1 unit\ntype RGB = [number, number, number];\n\nlet wrapper = document.querySelector('.wrapper')!;\n\nclass SquareTracker {\n    private static _MIN_ROWS = 3;\n    private _cols: number;\n    readonly projectSquares: HTMLElement[];\n    placeholderSquares: HTMLElement[];\n    corners: [RGB, RGB, RGB, RGB] = [ // top right, bottom right, top left, bottom left\n        [0x77, 0x77, 0x77],\n        [0x77, 0x77, 0x77],\n        [0x77, 0x77, 0x77],\n        [0x77, 0x77, 0x77]\n    ];\n\n    constructor() {\n        this._cols = +getComputedStyle(document.documentElement).getPropertyValue('--cols');\n\n        this.projectSquares = [...wrapper.querySelectorAll('a')];\n        for (let s of this.projectSquares) {\n            let span = document.createElement('span');\n            span.classList.add('colhex');\n            s.appendChild(span);\n\n            s.classList.add('box');\n        }\n\n        this.placeholderSquares = [];\n        for (let i = this.squares; i < (this.cols * SquareTracker._MIN_ROWS); i++) {\n            this._addSquare();\n        }\n    }\n\n    get squares() {\n        return this.projectSquares.length + this.placeholderSquares.length;\n    }\n\n    get cols() {\n        return this._cols;\n    }\n    set cols(value) {\n        if (value != this._cols) {\n            this._cols = value;\n            this._rebalance();\n        }\n    }\n\n    get rows(): number {\n        return this.squares / this.cols;\n    }\n\n    private _addSquare() {\n        let box = document.createElement('div');\n        let title = document.createElement('div');\n        let desc = document.createElement('div');\n        let colhex = document.createElement('span');\n        \n        title.classList.add('title');\n        desc.classList.add('desc');\n        colhex.classList.add('colhex');\n        \n        box.classList.add('box');\n        box.append(title, desc, colhex);\n        box.addEventListener(\"click\", this.regenColors.bind(this, false));\n    \n        wrapper.appendChild(box);\n        this.placeholderSquares.push(box);\n    }\n\n    private _removeSquare() {\n        this.placeholderSquares.pop()?.remove();\n    }\n\n    private _rebalance() {\n        let squares = this.squares;\n        // n = number of squares that should be on board\n        let n = Math.max(this._cols * SquareTracker._MIN_ROWS, this.projectSquares.length);\n        n = Math.ceil(n / this._cols) * this._cols;\n\n        if (squares == n) return;\n        if (squares > n) {\n            for (let i = squares; i > n; i--) {\n                this._removeSquare();\n            }\n        } else if (squares < n) {\n            for (let i = squares; i < n; i++) {\n                this._addSquare();\n            }\n        }\n\n        this.regenColors(true);\n    }\n\n    forEach(callback: (value: HTMLElement, index: number) => void) {\n        let i = 0;\n        for (let e of this.projectSquares) callback(e, i++);\n        for (let e of this.placeholderSquares) callback(e, i++);\n    }\n\n    regenColors(useCurrentCorners: boolean = false) {\n        if (!useCurrentCorners) this.corners = Array.from({length: 4}, () => randRGB(0x50)) as [RGB, RGB, RGB, RGB];\n        let corners = this.corners;\n        \n        if (this._cols < 3) {\n            // use TL + BR boxes rather than the corners to make a consistent grid (rather than 2 columns of color)\n            let corners2: [RGB, RGB] = [corners[2], corners[1]];\n            this.assignColors(i => interpolate2(corners2, asCoord(i)), useCurrentCorners);\n        } else {\n            this.assignColors(i => interpolate4(corners, asNormCoord(i)), useCurrentCorners);\n        }\n\n    }\n\n    assignColors(callback: (cellIndex: number) => RGB, skipTransition = false) {\n        squares.forEach((s, i) => {\n            let clr = callback(i);\n            if (skipTransition) {\n                s.classList.add(\"no-transition\");\n                s.offsetHeight;\n            }\n            s.style.backgroundColor = hex(clr);\n    \n            s.querySelector('.colhex')!.textContent = hex(clr);\n        });\n\n        if (skipTransition) {\n            // return transition after color change\n            requestAnimationFrame(() => { // this is called before update\n                requestAnimationFrame(() => { // this is called after update\n                    squares.forEach(s => {\n                        s.classList.remove(\"no-transition\");\n                    });\n                });\n            });\n        }\n    }\n\n}\nlet squares = new SquareTracker();\nsquares.regenColors();\n\nwindow.addEventListener(\"resize\", e => {\n    squares.cols = +getComputedStyle(wrapper).getPropertyValue('--cols');\n})\nfunction asCoord(i: number): Coord {\n    // takes an index in the array, maps it to its [row, col] value\n    return [Math.floor(i / squares.cols), i % squares.cols];\n}\nfunction asNormCoord(i: number): NormCoord {\n    // takes an index in the array, maps it to its NormCoord value\n    let [r, c] = asCoord(i);\n    return [r / (squares.rows - 1), c / (squares.cols - 1)];\n}\n\nfunction randInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nfunction randRGB(min = 0, max = 256): RGB {\n    // [min, max)\n    return Array.from({length: 3}, () => randInt(min, max)) as RGB;\n}\nfunction hex(arr: RGB) {\n    // converts rgb array => hex notation\n    return `#${arr.map(x => Math.round(x).toString(16).padStart(2, \"0\")).join('')}`\n}\n\nfunction zip<A extends any[]>(...v: {[I in keyof A]: A[I][]}): A[] {\n    let length = v[0].length;\n    return Array.from({length}, (_, i) => v.map(a => a[i]) as A);\n}\n\nfunction lerp<T extends number[]>(pts: [T, T], dist: number): T {\n    let [p, q] = pts;\n    let length = p.length;\n    return Array.from({length}, (_, i) => {\n        let a = p[i], b = q[i];\n        return a + dist * (b - a);\n    }) as T;\n}\n\nfunction bilerp<T extends number[]>(pts: [T, T, T, T], c: NormCoord): T {\n    type ArrPair = [T, T];\n    let [px, py] = c;\n    let [top, bottom] = [pts.slice(0, 2) as ArrPair, pts.slice(2, 4) as ArrPair]\n    return lerp([lerp(bottom, px), lerp(top, px)], py);\n}\n\n// interpolate given that each corner is assigned a color\nfunction interpolate4(clrs: [RGB, RGB, RGB, RGB], c: NormCoord) {\n    // weight = how much each of the 4 points are valued based on the distance point c is from the corner\n    let weights = bilerp<[number, number, number, number]>([\n        [1,0,0,0],\n        [0,1,0,0],\n        [0,0,1,0],\n        [0,0,0,1]\n    ], c);\n\n    return Array.from({length: 3}, (_, i) => {\n        let channels = clrs.map(clr => clr[i]);\n\n        let sqsum = zip(channels, weights)\n            .map(([c, w]) => w * c * c)\n            .reduce((acc, cv) => acc + cv);\n        \n        return Math.round(Math.sqrt(sqsum));\n    }) as RGB;\n}\n\nfunction manhattan(p: Coord, q: Coord): number {\n    return zip(p, q)\n        .map(([px, qx]) => Math.abs(px - qx))\n        .reduce((acc, cv) => acc + cv);\n}\n\n// interpolate given that the top left and bottom right are assigned colors\nfunction interpolate2(clrs: [RGB, RGB], c: Coord) {\n    // weight = how much each of the 2 points are valued based on the distance point c is from the corner\n    let [aw, bw] = [\n        manhattan([0, 0], c),\n        manhattan([squares.rows - 1, squares.cols - 1], c),\n    ];\n    let weights = [\n        bw / (aw + bw), // note, flipped\n        aw / (aw + bw)\n    ];\n\n    return Array.from({length: 3}, (_, i) => {\n        let channels = clrs.map(clr => clr[i]);\n\n        let sqsum = zip(channels, weights)\n            .map(([c, w]) => w * c * c)\n            .reduce((acc, cv) => acc + cv);\n        \n        return Math.round(Math.sqrt(sqsum));\n    }) as RGB;\n}\n\nexport {}; // recognize as module","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"index.68e6e43a.js.map","sourceRoot":"/__parcel_source_root/"}