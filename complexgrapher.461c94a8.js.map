{"mappings":"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","sources":["node_modules/.pnpm/@parcel+runtime-js@2.5.0_@parcel+core@2.5.0/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/.pnpm/@parcel+runtime-js@2.5.0_@parcel+core@2.5.0/node_modules/@parcel/runtime-js/lib/runtime-b708c5a306536ad5.js","src/complexgrapher/complexgrapher.ts","node_modules/.pnpm/@parcel+runtime-js@2.5.0_@parcel+core@2.5.0/node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/.pnpm/@parcel+runtime-js@2.5.0_@parcel+core@2.5.0/node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/.pnpm/@parcel+runtime-js@2.5.0_@parcel+core@2.5.0/node_modules/@parcel/runtime-js/lib/runtime-c450be412dcf1087.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5Hjnn\\\":\\\"complexgrapher.461c94a8.js\\\",\\\"egthy\\\":\\\"main.f84a3cda.js\\\",\\\"aUCA8\\\":\\\"complexgrapher.fd9de889.js\\\",\\\"jcp2F\\\":\\\"complexgrapher.9a30d116.js\\\"}\"));","import { create, all } from \"mathjs\";\nimport { Complex, ComplexFunction, MainIn, MainOut, PartialEvaluator } from \"./types\";\nconst math = create(all);\n\nconst canvas      = document.querySelector('canvas')!       as HTMLCanvasElement,\n      funcForm    = document.querySelector('#funcForm')!    as HTMLFormElement,\n      input       = funcForm.querySelector('input')!        as HTMLInputElement,\n      graphButton = document.querySelector('#graphButton')! as HTMLButtonElement,\n      zcoord      = document.querySelector('#zcoord')!      as HTMLDivElement,\n      zoomButtons = document.querySelectorAll('button.zoom'),\n      zoomForm    = document.querySelector('#zoomForm')!    as HTMLFormElement,\n      zoomInput   = zoomForm.querySelector('input')!        as HTMLInputElement,\n      scaleForm   = document.querySelector('#scaleForm')!   as HTMLFormElement,\n      scaleInput  = scaleForm.querySelector('input')!       as HTMLInputElement,\n      warning     = document.querySelector('#warning')!     as HTMLDivElement,\n      domain      = document.querySelectorAll('.domain');\nconst ctx = canvas.getContext('2d', {alpha: false})!;\nlet scale = 1; // increase = zoom in, decrease = zoom out\nlet d: ComplexFunction = (z => z); // actual values of the function\n\nlet worker: Worker = new Worker(new URL(\"./worker/main\", import.meta.url), {type: \"module\"});\nworker.onmessage = function (e) {\n    let msg: MainOut = e.data;\n\n    if (msg.action === \"loadChunk\") {\n        let dat = new ImageData(new Uint8ClampedArray(msg.buf), msg.chunk.width, msg.chunk.height);\n        ctx.putImageData(dat, msg.chunk.offx, msg.chunk.offy);\n    } else if (msg.action === \"done\") {\n        markDone(msg.time);\n    }\n}\nworker.onerror = onComputeError;\n\nvar domaind = [math.complex('-2-2i'), math.complex('2+2i')] as [unknown, unknown] as [Complex, Complex];\n\nfunction canvasHover(e: MouseEvent) {\n    zcoord.classList.remove('error');\n    zcoord.textContent = `z = ${convPlanes(e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop)}`;\n};\n\ncanvas.addEventListener('mousemove', canvasHover);\ncanvas.addEventListener('click', e => {\n    let cx = e.pageX - canvas.offsetLeft;\n    let cy = e.pageY - canvas.offsetTop;\n\n    let z = convPlanes(cx, cy);\n    console.log(`z = ${z},\\nf(z) = ${d(z)}`);\n})\ninput.addEventListener('input', () => {\n    input.value = input.value.replace(/[^a-zA-Z0-9+\\-*/^., ()]/g, ''); //removes invalid characters\n})\ngraphButton.addEventListener('click', () => {\n    zcoord.classList.remove('error');\n    zoomInput.value = scale.toString();\n\n    let size = +scaleInput.value * 2 + 1;\n    if (canvas.width !== size) canvas.width = canvas.height = size;\n    [domain[0].textContent, domain[1].textContent] = domaind.map(x => x.div(scale).toString());\n    zcoord.textContent = 'Graphing...'\n    canvas.removeEventListener('mousemove', canvasHover);\n\n    let fstr = input.value;\n    try {\n        d = math.evaluate(`f(z) = ${fstr}`);\n        startWorker(worker, fstr);\n    } catch (e) {\n        onComputeError(e as any);\n        throw e;\n    }\n});\n\nzoomButtons[0].addEventListener('click', () => {\n    scale *= 2;\n    graphButton.click();\n})\nzoomButtons[1].addEventListener('click', () => {\n    if (scale !== 1) {\n        scale = 1;\n        graphButton.click();\n    }\n})\nzoomButtons[2].addEventListener('click', () => {\n    scale /= 2;\n    graphButton.click();\n})\nzoomInput.addEventListener('input', () => {\n    zoomInput.value = zoomInput.value.replace(/[^0-9.]/g, '');\n    if (isNaN(+scaleInput.value)) zoomInput.value = \"1\";\n\n    if ([...zoomInput.value].filter(x => x === '.').length > 1) {\n        var ziArray = zoomInput.value.split('.');\n        zoomInput.value = ziArray[0] + '.' + ziArray.slice(1).join('');\n    }\n});\nzoomForm.addEventListener('submit', e => {\n    e.preventDefault();\n    if (scale !== +zoomInput.value) {\n    scale = +zoomInput.value || 0;\n    graphButton.click();\n    }\n})\nscaleInput.addEventListener('input', () => {\n    if (isNaN(+scaleInput.value)) scaleInput.value = \"250\";\n    warning.style.display = +scaleInput.value > 250 ? 'inline' : 'none';\n});\nscaleForm.addEventListener('submit', e => {\n    e.preventDefault();\n    let size = +scaleInput.value * 2 + 1;\n    if (canvas.width !== size) {\n    canvas.width = canvas.height = size;\n    graphButton.click();\n    }\n})\nfuncForm.addEventListener('submit', e => {\n    e.preventDefault();\n    graphButton.click();\n})\n\nfunction convPlanes(x: number, y: number) {\n    //converts xy pixel plane to complex plane\n\n    // let cmx =  (row - rx) / (rx / 2) / scale,\n    //     cmy = -(col - ry) / (ry / 2) / scale;\n\n    // row - rx: distance from center, in canvas pixels\n    // / (rx / 2): normalizes that so the edge is 2\n    // / scale: scale mult.\n\n    let [rx, ry] = [(canvas.width - 1) / 2, (canvas.height - 1) / 2];\n    let cmx =  (x - rx) / (rx / 2) / scale,\n        cmy = -(y - ry) / (ry / 2) / scale;\n    return math.complex(cmx, cmy) as unknown as Complex;\n}\n\nfunction startWorker(w: Worker, fstr: string) {\n    let msg: MainIn = {\n        pev: partialEvaluate(fstr), \n        cd: {\n        width: canvas.width,\n        height: canvas.height,\n        scale\n    }};\n    w.postMessage(msg);\n}\n\nfunction partialEvaluate(fstr: string): PartialEvaluator {\n    let node = math.simplify(fstr);\n    let fnode = math.parse(\"f(z) = 0\") as math.FunctionAssignmentNode;\n\n    let inverse = false;\n    if (node.type == \"OperatorNode\" && node.fn == 'divide' && !isNaN(+node.args[0])) { // reciprocal func\n        node.args.reverse();\n        node = math.simplify(node);\n        inverse = true;\n    }\n\n    fnode.expr = node;\n    return { fstr: fnode.toString(), inverse };\n}\n\nfunction markDone(t: number) {\n    zcoord.textContent = `Done in ${t}ms.`;\n    reenableHover();\n}\n\nfunction onComputeError(e: Error | ErrorEvent) {\n    let err = e instanceof ErrorEvent ? e.message : e;\n\n    canvas.removeEventListener('mousemove', canvasHover);\n    zcoord.classList.add('error');\n    zcoord.textContent = String(err);\n    reenableHover();\n}\n\nfunction reenableHover() {\n    setTimeout(() => canvas.addEventListener('mousemove', canvasHover), 500);\n}\n\ngraphButton.click();\n","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('5Hjnn') + require('./helpers/bundle-manifest').resolve(\"egthy\");module.exports = workerURL(url, bundleURL.getOrigin(url), false);"],"names":["$8ea8e656a42c214a$export$6503ec6e8aabbaf","$8ea8e656a42c214a$export$f7ad0328861e2f03","$8ea8e656a42c214a$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$d0a233c4f78995e2$export$bdfd709ae4826697","$d0a233c4f78995e2$export$5a759dc7a1cfb72a","$7uoCD","$a1c2e7b6e24fd632$var$math","$b3Rbn","create","all","$a1c2e7b6e24fd632$var$canvas","document","querySelector","$a1c2e7b6e24fd632$var$funcForm","$a1c2e7b6e24fd632$var$input","$a1c2e7b6e24fd632$var$graphButton","$a1c2e7b6e24fd632$var$zcoord","$a1c2e7b6e24fd632$var$zoomButtons","querySelectorAll","$a1c2e7b6e24fd632$var$zoomForm","$a1c2e7b6e24fd632$var$zoomInput","$a1c2e7b6e24fd632$var$scaleForm","$a1c2e7b6e24fd632$var$scaleInput","$a1c2e7b6e24fd632$var$warning","$a1c2e7b6e24fd632$var$domain","$a1c2e7b6e24fd632$var$ctx","getContext","alpha","$a1c2e7b6e24fd632$var$scale","$a1c2e7b6e24fd632$var$d","z","$e8772b7acec39035$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$d0a233c4f78995e2$var$bundleURL","$d0a233c4f78995e2$var$getBaseURL","url","replace","value","err","matches","stack","match","$d0a233c4f78995e2$var$getBundleURL","$9764260d596bb517$var$url","resolve","$9764260d596bb517$exports","$a1c2e7b6e24fd632$var$worker","Worker","onmessage","e","t","msg","data","action","dat","ImageData","Uint8ClampedArray","buf","chunk","width","height","putImageData","offx","offy","time","textContent","concat","$a1c2e7b6e24fd632$var$reenableHover","onerror","$a1c2e7b6e24fd632$var$onComputeError","$a1c2e7b6e24fd632$var$domaind","complex","$a1c2e7b6e24fd632$var$canvasHover","classList","remove","$a1c2e7b6e24fd632$var$convPlanes","pageX","offsetLeft","pageY","offsetTop","x","y","ref","rx","ry","cmx","cmy","$a1c2e7b6e24fd632$var$partialEvaluate","fstr","node","simplify","fnode","inverse","fn","isNaN","args","reverse","expr","toString","ErrorEvent","message","removeEventListener","add","String","setTimeout","addEventListener","console","log","size","map","div","evaluate","w","pev","cd","scale","postMessage","$a1c2e7b6e24fd632$var$startWorker","click","toConsumableArray","filter","ziArray","split","slice","join","preventDefault","style","display"],"version":3,"file":"complexgrapher.461c94a8.js.map"}