{"mappings":"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","sources":["src/gradient/gradient.ts"],"sourcesContent":["declare var OffscreenCanvas: any;\n\nconst canvas = document.querySelector('canvas')! as HTMLCanvasElement;\nconst ctx = canvas.getContext('2d')!;\nlet ipol = (document.querySelector(\"input[name='ipol'][checked]\")! as HTMLInputElement).value;\n\nlet ipolRadios = document.querySelectorAll('input[type=radio]'),\n    coloradd = document.querySelector('#coloradd')! as HTMLButtonElement,\n    colorsWrapper = document.querySelector('#colors')! as HTMLDivElement;\n\ntype RGB = [number, number, number];\n\ndocument.querySelectorAll('input[type=color]').forEach(x => x.addEventListener('change', update))\nipolRadios.forEach(x => x.addEventListener('change', e => {\n    ipol = (x as HTMLInputElement).value;\n    update();\n}));\n\ncoloradd.addEventListener('click', () => {\n    let div = colorDiv();\n    colorsWrapper.insertBefore(div, coloradd);\n\n    let buts = colorRMButtons();\n    if (buts.length > 2) {\n        for (let b of buts) {\n            b.disabled = false;\n        }\n    }\n    update();\n})\n\ndocument.querySelectorAll('.colorrm').forEach(e => e.addEventListener('click', () => {\n    colorsWrapper.removeChild(e.parentElement!);\n    let buts = colorRMButtons();\n    if (buts.length < 3) {\n        for (let b of buts) b.disabled = true;\n    }\n    update();\n}))\nupdate();\n\nfunction getColors() {\n    let cinputs =  document.querySelectorAll('input[type=color]');\n    return [...cinputs].map(x => (x as HTMLInputElement).value);\n}\n\nfunction rgb(hex: string): RGB {\n    return [hex.slice(1,3), hex.slice(3,5), hex.slice(5,7)].map(x => parseInt(x, 16)) as RGB;\n}\n\nfunction colorRMButtons() {\n    return document.querySelectorAll('.colorrm') as NodeListOf<HTMLButtonElement>;\n}\n\nfunction interpolate(a: number, b: number, prog: number) {\n    return Math.hypot(a * Math.sqrt(1 - prog), b * Math.sqrt(prog));\n}\nfunction colorDiv(hex = '#000000') {\n    let div = document.createElement('div');\n\n    let clr = document.createElement('input');\n    clr.type = 'color';\n    clr.value = hex;\n    clr.addEventListener('change', update);\n\n    let button = document.createElement('button');\n    button.classList.add('colorrm');\n    button.textContent = 'x';\n    button.addEventListener('click', () => {\n        colorsWrapper.removeChild(button.parentElement!);\n        let buts = colorRMButtons();\n        if (buts.length < 3) {\n            for (let b of buts) b.disabled = true;\n        }\n        update();\n    });\n        \n    div.appendChild(clr);\n    div.appendChild(button);\n    return div;\n}\n\nfunction update() {\n    let clrs = getColors();\n    let lind = clrs.length - 1;\n    switch (ipol) {\n        case 'lin':\n            let grad = ctx.createLinearGradient(0, 0, canvas.width, 0);\n            for (var [i, c] of clrs.entries()) grad.addColorStop(i / lind, c);\n            ctx.fillStyle = grad;\n            break;\n        case 'rms':\n            let ocanvas: HTMLCanvasElement;\n            if (\"OffscreenCanvas\" in globalThis) {\n                ocanvas = new OffscreenCanvas(canvas.width, 1);\n            } else {\n                ocanvas = document.createElement('canvas');\n                [ocanvas.width, ocanvas.height] = [canvas.width, 1];\n            }\n            let octx = ocanvas.getContext('2d')!;\n\n            let dat = octx.createImageData(ocanvas.width, 1);\n            let arr32 = new Uint32Array(dat.data.buffer);\n            let arrlind = arr32.length - 1;\n            for (var i = 0; i < arr32.length; i++) {\n                let pos = (i / arrlind) * lind;\n                let [j, prog] = [Math.floor(pos), pos % 1];\n                let [a, b] = [clrs[j], clrs[j + 1] ?? '#000000'].map(x => rgb(x));\n                let c = Array.from({length: 3}, (_, i) => interpolate(a[i], b[i], prog));\n                arr32[i] = 0xFF << 24\n                         | c[2] << 16\n                         | c[1] <<  8\n                         | c[0] <<  0;\n            }\n            octx.putImageData(dat, 0, 0);\n            let pat = ctx.createPattern(ocanvas, 'repeat-y')!;\n            ctx.fillStyle = pat;\n            break;\n\n    }\n\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n}"],"names":[],"version":3,"file":"gradient.e9929045.js.map","sourceRoot":"/__parcel_source_root/"}