{"mappings":"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","sources":["node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_array_with_holes.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_iterable_to_array.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_non_iterable_rest.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_array_like_to_array.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_sliced_to_array.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_array_without_holes.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_non_iterable_spread.mjs","node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_to_consumable_array.mjs","src/gradient/gradient.ts"],"sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n","import _arrayLikeToArray from './_array_like_to_array.mjs';\n\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\n","import arrayWithHoles from './_array_with_holes.mjs';\nimport iterableToArrayLimit from './_iterable_to_array.mjs';\nimport nonIterableRest from './_non_iterable_rest.mjs';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array.mjs';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n","import _arrayLikeToArray from './_array_like_to_array.mjs';\n\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","import arrayWithoutHoles from './_array_without_holes.mjs';\nimport iterableToArray from './_iterable_to_array.mjs';\nimport nonIterableSpread from './_non_iterable_spread.mjs';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array.mjs';\n\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n","declare var OffscreenCanvas: any;\n\ntype IpolType = \"lin\" | \"rms\";\n\nconst linCanvas = document.querySelector<HTMLCanvasElement>('#lin-result canvas')!;\nconst lctx = linCanvas.getContext('2d', {alpha: false})!;\nconst rmsCanvas = document.querySelector<HTMLCanvasElement>('#rms-result canvas')!;\nconst rctx = rmsCanvas.getContext('2d', {alpha: false})!;\nconst cssCanvas = document.querySelector<HTMLDivElement>(\"#css-result div#css-gradient\")!;\n\nconst coloradd = document.querySelector<HTMLButtonElement>('button#coloradd')!;\nconst colorsWrapper = document.querySelector<HTMLDivElement>('div#colors')!;\n\nconst gammaInput = document.querySelector<HTMLInputElement>(\"input#gamma-input\")!;\n\nconst DEFAULT_GAMMA = 2.2;\ntype RGB = [r: number, g: number, b: number];\n\n/**\n * Computes the input gamma.\n */\nfunction gamma() {\n    if (!gammaInput.checkValidity() || gammaInput.value === \"\") {\n        gammaInput.value = \"\" + DEFAULT_GAMMA;\n    }\n    \n    return +gammaInput.value;\n}\n\nupdateAll();\ndocument.querySelectorAll('input[type=color]').forEach(x => x.addEventListener('change', updateAll));\ngammaInput.addEventListener(\"input\", updateAll);\n\n/**\n * Add another color stop to the display. This automatically inserts the color input to DOM.\n * @param update Whether or not the gradients should be refreshed.\n * @returns the color stop element\n */\nfunction addColorInput(update = true) {\n    let div = makeColorDiv();\n    colorsWrapper.insertBefore(div, coloradd);\n\n    let buts = colorRMButtons();\n    if (buts.length > 2) {\n        for (let b of buts) {\n            b.disabled = false;\n        }\n    }\n    if (update) updateAll();\n    return div;\n}\ncoloradd.addEventListener('click', () => {\n    addColorInput(true);\n})\n\ndocument.querySelectorAll('.colorrm').forEach(e => e.addEventListener('click', () => {\n    colorsWrapper.removeChild(e.parentElement!);\n    let buts = colorRMButtons();\n    if (buts.length < 3) {\n        for (let b of buts) b.disabled = true;\n    }\n    updateAll();\n}))\n\n/**\n * @returns the input colors as hex strings\n */\nfunction getColors() {\n    let cinputs =  document.querySelectorAll<HTMLInputElement>('input[type=color]');\n    return Array.from(cinputs, e => e.value);\n}\n\n/**\n * Takes a hex string and converts it into an RGB array\n * @param hex hex string\n * @returns RGB array\n */\nfunction rgb(hex: string): RGB {\n    return [hex.slice(1,3), hex.slice(3,5), hex.slice(5,7)].map(x => parseInt(x, 16)) as RGB;\n}\n\n/**\n * @returns every color input <div>\n */\n function colorInput() {\n    return colorsWrapper.querySelectorAll('div');\n}\n/**\n * @returns every color \"remove\" button\n */\nfunction colorRMButtons() {\n    return document.querySelectorAll<HTMLButtonElement>('button.colorrm');\n}\n\n/**\n * Creates a color input div\n * @param hex Initial color of the div\n * @returns the div\n */\nfunction makeColorDiv(hex = '#000000') {\n    let div = document.createElement('div');\n\n    let clr = document.createElement('input');\n    clr.type = 'color';\n    clr.value = hex;\n    clr.addEventListener('change', updateAll);\n\n    let button = document.createElement('button');\n    button.classList.add('colorrm');\n    button.textContent = 'x';\n    button.addEventListener('click', () => {\n        colorsWrapper.removeChild(div);\n\n        let buts = colorRMButtons();\n        if (buts.length < 3) {\n            for (let b of buts) {\n                b.disabled = true;\n            }\n        }\n\n        updateAll();\n    });\n        \n    div.append(clr, button);\n    return div;\n}\n\n/**\n * Interpolates from one number to another using root-mean-square (the end points are squared, averaged, then the mean is rooted).\n * @param a endpoint\n * @param b endpoint\n * @param prog [0, 1)\n * @returns interpolated value\n */\nfunction gammaInterpolate(a: number, b: number, gamma: number, prog: number) {\n    return ((1 - prog) * (a ** gamma) + prog * (b ** gamma)) ** (1 / gamma);\n}\n\n/**\n * Update all result canvases\n */\nfunction updateAll() {\n    const clrs = getColors();\n\n    cssCanvas.style.background = `linear-gradient(0.25turn, ${clrs.join(\", \")})`;\n    updateCanvas(lctx, \"lin\", clrs);\n    updateCanvas(rctx, \"rms\", clrs);\n}\n\n/**\n * Update a canvas using a specified interpolation type and array of colors\n * @param ctx the canvas's rendering context\n * @param ipol interpolation type\n * @param clrs array of colors to update the canvas with\n */\nfunction updateCanvas(ctx: CanvasRenderingContext2D, ipol: IpolType, clrs: string[]) {\n    const lastIndex = clrs.length - 1;\n    const canvas = ctx.canvas;\n\n    if (ipol === \"lin\") {\n        const grad = ctx.createLinearGradient(0, 0, canvas.width, 0);\n\n        for (var [i, c] of clrs.entries()) {\n            grad.addColorStop(i / lastIndex, c);\n        }\n        ctx.fillStyle = grad;\n    } else if (ipol === \"rms\") {\n        let ocanvas: HTMLCanvasElement;\n        if (\"OffscreenCanvas\" in globalThis) {\n            ocanvas = new OffscreenCanvas(canvas.width, 1);\n        } else {\n            ocanvas = document.createElement('canvas');\n            [ocanvas.width, ocanvas.height] = [canvas.width, 1];\n        }\n        const octx = ocanvas.getContext('2d')!;\n    \n        const dat = octx.createImageData(ocanvas.width, 1);\n        const arr32 = new Uint32Array(dat.data.buffer);\n        const arr32LastIndex = arr32.length - 1;\n        for (var i = 0; i < arr32.length; i++) {\n            const pos = (i / arr32LastIndex) * lastIndex;\n            const [j, prog] = [Math.floor(pos), pos % 1];\n            const [a, b] = [clrs[j], clrs[j + 1] ?? '#000000'].map(x => rgb(x));\n            const c = Array.from({length: 3}, (_, i) => gammaInterpolate(a[i], b[i], gamma(), prog));\n            arr32[i] = 0xFF << 24\n                     | c[2] << 16\n                     | c[1] <<  8\n                     | c[0] <<  0;\n        }\n        octx.putImageData(dat, 0, 0);\n        const pat = ctx.createPattern(ocanvas, 'repeat-y')!;\n        ctx.fillStyle = pat;\n    } else {\n        let _: never = ipol;\n    }\n\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n\ndeclare global {\n    interface Window {\n        setColors(...clrs: string[]): void;\n        gay(): void;\n    }\n}\n\nfunction setColors(...clrs: string[]) {\n    let inputs = [...colorInput()];\n\n    if (clrs.length < 2) throw new Error(\"Two colors are required for a gradient\");\n\n    while (clrs.length < inputs.length) {\n        inputs.pop()?.remove();\n    }\n    while (inputs.length < clrs.length) {\n        inputs.push(addColorInput(false));\n    }\n\n    inputs.forEach((div, i) => {\n        const input = div.querySelector<HTMLInputElement>(\"input[type=color]\")!;\n        const clr = clrs[i];\n\n        input.value = clr;\n    });\n\n    updateAll();\n}\nwindow.setColors = setColors;\n\nfunction gay() {\n    setColors(\n        \"#FF0000\",\n        \"#FFFF00\",\n        \"#00FF00\",\n        \"#00FFFF\",\n        \"#0000FF\",\n        \"#FF00FF\",\n        \"#FF0000\"\n    );\n}\nwindow.gay = gay;\n\nexport {};"],"names":["$5daec9f6cbed6cd4$export$2e2bcd8739ae039","arr","Array","isArray","$a143715458c708ee$export$2e2bcd8739ae039","iter","Symbol","iterator","from","$32f00be0b61b76cc$export$2e2bcd8739ae039","TypeError","$79cee1a838c2c20a$export$2e2bcd8739ae039","len","length","i","arr2","$67456225a28b1315$export$2e2bcd8739ae039","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","$6c928caf6d7b81fa$export$2e2bcd8739ae039","$53a704e7816323fd$export$2e2bcd8739ae039","$c713d431f94f06dd$export$2e2bcd8739ae039","$0408bdcfe5a1cecd$export$2e2bcd8739ae039","$c92a08c2ed7b65ae$var$lctx","document","querySelector","getContext","alpha","$c92a08c2ed7b65ae$var$rctx","$c92a08c2ed7b65ae$var$cssCanvas","$c92a08c2ed7b65ae$var$coloradd","$c92a08c2ed7b65ae$var$colorsWrapper","$c92a08c2ed7b65ae$var$gammaInput","$c92a08c2ed7b65ae$var$addColorInput","update","arguments","div","$c92a08c2ed7b65ae$var$makeColorDiv","insertBefore","buts","$c92a08c2ed7b65ae$var$colorRMButtons","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","b","value","disabled","err","return","$c92a08c2ed7b65ae$var$updateAll","$c92a08c2ed7b65ae$var$colorInput","querySelectorAll","hex","createElement","clr","type","addEventListener","button","classList","add","textContent","removeChild","append","cinputs","clrs","e","style","background","concat","join","$c92a08c2ed7b65ae$var$updateCanvas","ctx","ipol","lastIndex","canvas","grad","createLinearGradient","width","entries","_value","i11","c","addColorStop","fillStyle","ocanvas","ref1","pos","i1","arr32LastIndex","ref","Math","floor","j","prog","ref2","map","x","parseInt","a","_","gamma1","pow","$c92a08c2ed7b65ae$var$gammaInterpolate","checkValidity","arr32","globalThis","OffscreenCanvas","ref3","height","octx","dat","createImageData","Uint32Array","data","buffer","_loop","putImageData","pat","createPattern","fillRect","$c92a08c2ed7b65ae$var$setColors","_len","_key","inputs","Error","pop","remove","push","forEach","input","parentElement","window","setColors","gay"],"version":3,"file":"gradient.cf327ab6.js.map"}