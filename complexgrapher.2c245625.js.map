{"mappings":"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","sources":["src/complexgrapher/complexgrapher.ts"],"sourcesContent":["import { create, all } from \"mathjs\";\nimport complex from \"complex.js\";\nconst math = create(all);\n\nlet canvas      = document.querySelector('canvas')!       as HTMLCanvasElement,\n    funcForm    = document.querySelector('#funcForm')!    as HTMLFormElement,\n    input       = funcForm.querySelector('input')!        as HTMLInputElement,\n    graphButton = document.querySelector('#graphButton')! as HTMLButtonElement,\n    zcoord      = document.querySelector('#zcoord')!      as HTMLDivElement,\n    zoomButtons = document.querySelectorAll('button.zoom'),\n    zoomForm    = document.querySelector('#zoomForm')!    as HTMLFormElement,\n    zoomInput   = zoomForm.querySelector('input')!        as HTMLInputElement,\n    scaleForm   = document.querySelector('#scaleForm')!   as HTMLFormElement,\n    scaleInput  = scaleForm.querySelector('input')!       as HTMLInputElement,\n    warning     = document.querySelector('#warning')!     as HTMLDivElement,\n    domain      = document.querySelectorAll('.domain');\nlet ctx = canvas.getContext('2d', {alpha: false})!;\nlet scale = 1; // increase = zoom in, decrease = zoom out\n\ntype ComplexFunction = (z: complex.Complex) => complex.Complex | number;\nlet f: ComplexFunction = (z => z);\nlet d: ComplexFunction = (z => z);\n\nvar domaind = [math.complex('-2-2i'), math.complex('2+2i')] as [unknown, unknown] as [complex.Complex, complex.Complex];\n\nfunction canvasHover(e: MouseEvent) {\n    zcoord.classList.remove('error');\n    zcoord.textContent = `z = ${convPlanes(e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop)}`;\n};\n\ncanvas.addEventListener('mousemove', canvasHover);\ncanvas.addEventListener('click', e => {\n    console.log(`z = ${convPlanes(e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop)},\\nf(z) = ${d(convPlanes(e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop))}`);\n})\ninput.addEventListener('input', () => {\n    input.value = input.value.replace(/[^a-zA-Z0-9+\\-*/^., ()]/g, ''); //removes invalid characters\n})\ngraphButton.addEventListener('click', () => {\n    zcoord.classList.remove('error');\n    zcoord.onload = () => console.log('a');\n    zoomInput.value = scale.toString();\n\n    let size = +scaleInput.value * 2 + 1;\n    if (canvas.width !== size) canvas.width = canvas.height = size;\n    [domain[0].textContent, domain[1].textContent] = domaind.map(x => x.div(scale).toString());\n    zcoord.textContent = 'Graphing...'\n    canvas.removeEventListener('mousemove', canvasHover);\n    new Promise((resolve, reject) => loadGraph(input.value, resolve))\n        .then(() => {\n            zcoord.textContent = 'Done.';\n            setTimeout(() => canvas.addEventListener('mousemove', canvasHover), 500);\n        })\n        .catch(e => {\n            zcoord.classList.add('error');\n            zcoord.textContent = e;\n            setTimeout(() => canvas.addEventListener('mousemove', canvasHover), 500);\n            throw e;\n        });\n});\n\nzoomButtons[0].addEventListener('click', () => {\n    scale *= 2;\n    graphButton.click();\n})\nzoomButtons[1].addEventListener('click', () => {\n    if (scale !== 1) {\n        scale = 1;\n        graphButton.click();\n    }\n})\nzoomButtons[2].addEventListener('click', () => {\n    scale /= 2;\n    graphButton.click();\n})\nzoomInput.addEventListener('input', () => {\n    zoomInput.value = zoomInput.value.replace(/[^0-9.]/g, '');\n    if (isNaN(+scaleInput.value)) zoomInput.value = \"1\";\n\n    if ([...zoomInput.value].filter(x => x === '.').length > 1) {\n        var ziArray = zoomInput.value.split('.');\n        zoomInput.value = ziArray[0] + '.' + ziArray.slice(1).join('');\n    }\n});\nzoomForm.addEventListener('submit', e => {\n    e.preventDefault();\n    if (scale !== +zoomInput.value) {\n    scale = +zoomInput.value || 0;\n    graphButton.click();\n    }\n})\nscaleInput.addEventListener('input', () => {\n    if (isNaN(+scaleInput.value)) scaleInput.value = \"250\";\n    warning.style.display = +scaleInput.value > 250 ? 'inline' : 'none';\n});\nscaleForm.addEventListener('submit', e => {\n    e.preventDefault();\n    let size = +scaleInput.value * 2 + 1;\n    if (canvas.width !== size) {\n    canvas.width = canvas.height = size;\n    graphButton.click();\n    }\n})\nfuncForm.addEventListener('submit', e => {\n    e.preventDefault();\n    graphButton.click();\n})\n\nfunction loadGraph(fstr: string, resolve: (v?: unknown) => void) {\n    //let bfunc = (fz, inv, pow = 1/2) => inv ? 1 - 2 * Math.atan(math.abs(fz)) / Math.PI : 2 * Math.atan(math.abs(fz)) / Math.PI // arctangent calculation\n    \n    let inverse = false; // signifies if to use the reciprocal optimization (bfunc(1/fz) = 1 - bfunc(fz))\n    let node = math.simplify(fstr);\n    let constant = 1;\n    //d = math.compile('f(z)='+node).eval();\n    //while (node.fn == 'unaryMinus' || node.fn == 'divide') {\n    //\tif (node.fn == 'unaryMinus') {\n    //\t\tconstant *= -1;\n    //\t\tnode = node.args[0];\n    //\t}\n    //\tif (node.fn == 'divide') {\n    //\t\tif (isNaN(node.args[0])) break;\n    //\t}\n    //}\n    //f = math.compile('f(z)='+math.simplify(`(${node})/${constant}`))\n    if (isOperator(node) && node.fn == 'divide' && !isNaN(+node.args[0])) { // reciprocal func\n        d = math.compile('f(z)='+node).evaluate();\n        [constant, node] = [+node.args[0], node.args[1]]\n        f = math.compile(`f(z)=(${node})/${constant}`).evaluate();\n        inverse = true;\n    } else {\n        d = f = math.compile('f(z)=' + node).evaluate();\n    }\n\n    let imageData = ctx.createImageData(canvas.width, canvas.height);\n    let arr32 = new Uint32Array(imageData.data.buffer);\n    for (var i = 0; i < canvas.width; i++) {\n        for (var j = 0; j < canvas.height; j++) {\n            let fz = forceComplex(f( convPlanes(i, j) ));\n            // if (typeof fz !== 'number' && fz.type !== 'Complex') throw new TypeError('Input value is not a number');\n            if (!Number.isFinite(fz.re) || !Number.isFinite(fz.im)) {\n                let infColor = +!inverse * 0xFF;\n                arr32[canvas.width * j + i] = (0xFF << 24) | (infColor << 16) | (infColor << 8) | infColor;\n                continue;\n            }\n            // get color\n            let hue, brightness, c, x, m, r, g, b;\n            hue = mod((inverse ? -1 : 1) * fz.arg() * 3 / Math.PI, 6); // hue [0,6)\n            brightness = brightnessFromMag(fz, inverse);\n            c = 1 - Math.abs(2 * brightness - 1);\n            x = c * (1 - Math.abs(mod(hue, 2) - 1));\n            m = brightness - c / 2;\n            if (0 <= hue && hue < 1) [r, g, b] = [c, x, 0];\n            else if (1 <= hue && hue < 2) [r, g, b] = [x, c, 0];\n            else if (2 <= hue && hue < 3) [r, g, b] = [0, c, x];\n            else if (3 <= hue && hue < 4) [r, g, b] = [0, x, c];\n            else if (4 <= hue && hue < 5) [r, g, b] = [x, 0, c];\n            else if (5 <= hue && hue < 6) [r, g, b] = [c, 0, x];\n            else [r, g, b] = [c, 0, x]; // should never happen?\n            //\n            arr32[canvas.width * j + i] = \n                (           255  << 24) | // alpha\n                (((b + m) * 255) << 16) |\n                (((g + m) * 255) <<  8) |\n                 ((r + m) * 255)\n            }\n    }\n    ctx.putImageData(imageData, 0, 0);\n\n    resolve();\n}\n\nfunction convPlanes(x: number, y: number) {\n    //converts xy pixel plane to complex plane\n\n    let cx =  (x - (canvas.width + 1) / 2) / ((canvas.width - 1) / 4 * scale),\n        cy = -(y - (canvas.width + 1) / 2) / ((canvas.height - 1) / 4 * scale);\n    return math.complex(cx, cy) as unknown as complex.Complex;\n}\n\nfunction forceComplex(z: number | complex.Complex) {\n    // z as any is ok here\n    return math.complex(z as any) as unknown as complex.Complex;\n}\n\nfunction brightnessFromMag(fz: complex.Complex, inv: boolean, pow = 1/2) {\n    let mag = fz.abs();\n    let b = 1 / (mag ** pow + 1);\n    if (inv) {\n        return b;\n    }\n    return 1 - b;\n}\n\nfunction isOperator(n: math.MathNode): n is math.OperatorNode {\n    return \"fn\" in n;\n}\n\nfunction mod(x: number, y: number) {\n    return ((x % y) + y) % y;\n}\n\ngraphButton.click();\n"],"names":["$a9d65da2cb1edf9e$var$math","$ghe96","create","all","$a9d65da2cb1edf9e$var$canvas","document","querySelector","$a9d65da2cb1edf9e$var$funcForm","$a9d65da2cb1edf9e$var$input","$a9d65da2cb1edf9e$var$graphButton","$a9d65da2cb1edf9e$var$zcoord","$a9d65da2cb1edf9e$var$zoomButtons","querySelectorAll","$a9d65da2cb1edf9e$var$zoomForm","$a9d65da2cb1edf9e$var$zoomInput","$a9d65da2cb1edf9e$var$scaleForm","$a9d65da2cb1edf9e$var$scaleInput","$a9d65da2cb1edf9e$var$warning","$a9d65da2cb1edf9e$var$domain","$a9d65da2cb1edf9e$var$ctx","getContext","alpha","$a9d65da2cb1edf9e$var$scale","$a9d65da2cb1edf9e$var$f","z","$a9d65da2cb1edf9e$var$d","$a9d65da2cb1edf9e$var$domaind","complex","$a9d65da2cb1edf9e$var$canvasHover","e","classList","remove","textContent","$a9d65da2cb1edf9e$var$convPlanes","pageX","offsetLeft","pageY","offsetTop","x","y","cx","width","cy","height","$a9d65da2cb1edf9e$var$forceComplex","$a9d65da2cb1edf9e$var$brightnessFromMag","fz","inv","pow","b","abs","$a9d65da2cb1edf9e$var$mod","addEventListener","console","log","value","replace","onload","toString","size","map","div","removeEventListener","Promise","resolve","reject","fstr","inverse","node","simplify","constant","n","fn","isNaN","args","compile","evaluate","imageData","createImageData","arr32","Uint32Array","data","buffer","i","j","hue","brightness","c","m","r","g","Number","isFinite","re","im","arg","Math","PI","infColor","putImageData","$a9d65da2cb1edf9e$var$loadGraph","then","setTimeout","catch","add","click","filter","length","ziArray","split","slice","join","preventDefault","style","display"],"version":3,"file":"complexgrapher.2c245625.js.map"}