{"mappings":"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","sources":["node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-ebf94ac01712eea4.js","src/complexgrapher/complexgrapher.ts","src/complexgrapher/types.ts","src/complexgrapher/evaluator.ts","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-2fbe291746b8d227.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-d76853abe3dd4514.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-414f81c63299e445.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"fujT7\\\":\\\"complexgrapher.21be10d3.js\\\",\\\"dq1cl\\\":\\\"webkitTest.5c78f70c.js\\\",\\\"egthy\\\":\\\"main.a2725cd9.js\\\",\\\"1GZwD\\\":\\\"main.66bf90c5.js\\\",\\\"ainsM\\\":\\\"chunkloader.ea8f7952.js\\\",\\\"bumwR\\\":\\\"chunkloader.614145f8.js\\\",\\\"2KAe5\\\":\\\"complexgrapher.924732c3.js\\\"}\"));","import { create, all, number } from \"mathjs\";\nimport { Complex, ComplexFunction, InitIn, InitOut, LoaderOut, MainIn, MainOut, PartialEvaluator } from \"./types\";\nimport * as evaluator from \"./evaluator\";\nconst math = create(all);\n\nconst wrapper        = document.querySelector<HTMLDivElement>('div#wrapper')!,\n      controls       = document.querySelector<HTMLDivElement>('div#controls')!,\n      funcInput      = document.querySelector<HTMLInputElement>('input#func-input')!,\n      graphButton    = document.querySelector<HTMLButtonElement>('#graph-button')!,\n      graphStatus    = document.querySelector<HTMLDivElement>('div#graph-status')!,\n      zWrapperItems  = document.querySelectorAll<HTMLElement>('div#z-wrapper code')!,\n      zoomButtons    = document.querySelectorAll<HTMLButtonElement>('button.zoom'),\n      zoomInput      = document.querySelector<HTMLInputElement>('input#zoom-input')!,\n      centerInputs   = document.querySelectorAll<HTMLInputElement>(\"input.center-input\"),\n      recenterButton = document.querySelector<HTMLButtonElement>(\"button#recenter-button\")!,\n      homeButton     = document.querySelector<HTMLButtonElement>(\"button#home-button\")!,\n      domain         = document.querySelectorAll<HTMLElement>('.domain');\n\nconst canvas = document.createElement(\"canvas\");\nconst ctx = canvas.getContext('2d', {alpha: false})!;\n\nwrapper.appendChild(canvas);\n\nasync function updateCanvasDims() {\n    await waitPageUpdate();\n    const { width, height } = canvas.getBoundingClientRect();\n    setProperty(canvas, \"width\",  Math.trunc(width));\n    setProperty(canvas, \"height\", Math.trunc(height));\n    ctx.globalCompositeOperation = \"copy\";\n\n    updateDomain();\n}\nupdateCanvasDims();\n\nconst bufCanvas = document.createElement(\"canvas\");\nconst bctx = bufCanvas.getContext('2d', {alpha: false})!;\n\nnamespace Buffer {\n    const bufProps = {\n        refs: 0,\n        mat: math.identity(3) as math.Matrix,\n    };\n\n    /**\n     * Obtain a reference to the buffer.\n     * If this is the first reference, then the canvas is also copied into the buffer.\n     */\n    export function prepare() {\n        if (!bufProps.refs) {\n            bufCanvas.width = canvas.width;\n            bufCanvas.height = canvas.height;\n            bctx.globalCompositeOperation = \"copy\";\n            bctx.imageSmoothingEnabled = false;\n            bctx.drawImage(canvas, 0, 0);\n\n            bufProps.mat = math.identity(3) as any;\n        }\n        bufProps.refs++;\n    }\n\n    /**\n     * Let go of the reference to the buffer.\n     */\n    export function release() {\n        bufProps.refs = Math.max(bufProps.refs - 1, 0);\n    }\n\n    /**\n     * Obtain a reference to the buffer, do something with it, then release the reference.\n     * @param f Actions to do. \n     * This callback includes an `owner` parameter that specifies \n     * if this was the first reference to the buffer.\n     * @param drawIfOwner If the borrower is actually the owner, should the buffer be drawn?\n     */\n    export function borrow(f: (owner: boolean) => any, drawIfOwner: boolean = true) {\n        const owner = bufProps.refs === 0;\n\n        prepare();\n        f(owner);\n        if (drawIfOwner && owner) draw();\n        release();\n    }\n\n    /**\n     * Draw the buffer onto the main canvas.\n     */\n    export function draw() {\n        if (bufProps.refs) {\n            const { mat } = bufProps;\n\n            abortGraph();\n            ctx.setTransform(\n                mat.get([0, 0]),\n                mat.get([1, 0]),\n                mat.get([0, 1]),\n                mat.get([1, 1]),\n                mat.get([0, 2]),\n                mat.get([1, 2]),\n            )\n            ctx.drawImage(bufCanvas, 0, 0);\n            ctx.resetTransform();\n        }\n    }\n\n    /**\n     * Add a translation to the buffer.\n     * @param dx \n     * @param dy \n     */\n    export function translate(dx: number, dy: number) {\n        bufProps.mat = math.multiply(\n            math.matrix([\n                [1, 0, dx],\n                [0, 1, dy],\n                [0, 0,  1],\n            ]),\n            bufProps.mat\n        );\n    }\n\n    /**\n     * Add a scale to the buffer.\n     * @param scale \n     * @param center Center to scale around\n     */\n    export function scaleAround(scale: number, center?: [number, number]) {\n        const [dx, dy] = center ?? [(canvas.width - 1) / 2, (canvas.height - 1) / 2];\n\n        bufProps.mat = math.chain(\n            math.matrix([\n                [1, 0, dx],\n                [0, 1, dy],\n                [0, 0,  1],\n            ]),\n        ).multiply(\n            math.matrix([\n                [1 / scale,         0, 0],\n                [        0, 1 / scale, 0],\n                [        0,         0, 1],\n            ]),\n        ).multiply(\n            math.matrix([\n                [1, 0, -dx],\n                [0, 1, -dy],\n                [0, 0,   1],\n            ]),\n        ).multiply(\n            bufProps.mat\n        ).done();\n    }\n}\n\nlet center = Complex.ZERO;\n\nfunction setCenter(c: Complex, bufSettings?: { updateBuffer: boolean }) {\n    if (bufSettings?.updateBuffer ?? true) Buffer.borrow(() => {\n        // If the center moves from (a + bi) to (0, 0), the image shifted right.\n        // So, actually you need to translate the buffer (a + bi).\n\n        const dz = center.sub(c);\n        const displace = Convert.toCanvasDisplace(dz);\n        Buffer.translate(...displace);\n    });\n    center = c;\n\n    centerInputs[0].value = `${c.re}`;\n    centerInputs[1].value = `${c.im}`;\n    setHiddenState(recenterButton, c.equals(0, 0));\n    setHiddenState(homeButton, c.equals(0, 0) && scale === 2);\n    \n    updateDomain();\n}\n\n{\n    document.querySelectorAll<HTMLFormElement>(\"#center-controls form\").forEach(f => {\n        f.addEventListener(\"submit\", e => {\n            const re = +centerInputs[0].value;\n            const im = +centerInputs[1].value;\n            const z = Complex(re, im);\n\n            setCenter(z);\n        });\n    });\n    recenterButton.addEventListener(\"click\", e => {\n        setCenter(Complex.ZERO);\n    });\n}\n\n/**\n * Identifier designating the current graph.\n * This is a cyclic value, ranging the entire 32-bit range.\n */\nlet graphID = 0;\n\n/**\n * The scale of the graph represents the distance (in complex units) \n * from the center of the screen to the top.\n */\nlet scale = 2;\n\nfunction setScale(n: number, bufSettings?: { updateBuffer: boolean }) {\n    n = Math.max(n, Number.EPSILON);\n    if (bufSettings?.updateBuffer ?? true) Buffer.borrow(() => {\n        const scaleRatio = n / scale;\n        Buffer.scaleAround(scaleRatio);\n    });\n    scale = n;\n\n    zoomInput.value = `${2 / scale}`;\n    zoomInput.style.width = `${zoomInput.value.length}ch`;\n\n    zoomButtons[1].disabled = scale === 2;\n    \n    setHiddenState(homeButton, center.equals(0, 0) && scale === 2);\n    updateDomain();\n}\n\nfunction addZoom(mouseX: number, mouseY: number, deltaY: number) {\n    // negative = zoom out\n    // positive = zoom in\n\n    const factor = 2 ** (deltaY * 0.005);\n\n    const mousePos = Convert.toComplex(mouseX, mouseY);\n    \n    // in the scaling, the mousePos stays in the same position, \n    // but the distance from the center scales\n    const disp = mousePos.sub(center);\n    \n    Buffer.borrow(() => {\n        setCenter(mousePos.sub(disp.mul(factor)));\n        setScale(scale * factor);\n    });\n    \n}\n\n{\n    const [zoomIn, zoomReset, zoomOut] = zoomButtons;\n\n    zoomIn.addEventListener('click',    () => setScale(scale / 2));\n    zoomReset.addEventListener('click', () => setScale(2));\n    zoomOut.addEventListener('click',   () => setScale(scale * 2));\n}\n\nhomeButton.addEventListener(\"click\", () => {\n    Buffer.borrow(() => {\n        setCenter(Complex.ZERO);\n        setScale(2);\n    });\n});\n\nfunction xyScale() {\n    return [\n        scale * canvas.width / canvas.height,\n        scale,\n    ] as const;\n}\nfunction updateDomain() {\n    const limitDomain = !!+getComputedStyle(document.documentElement)\n        .getPropertyValue(\"--limit-domain\");\n    \n    const [scaleX, scaleY] = xyScale();\n\n    const range = Complex(scaleX, scaleY);\n\n    const cmL = center.sub(range);\n    const cmR = center.add(range);\n\n    if (!limitDomain) {\n        domain[0].textContent = `${cmL}`;\n        domain[1].textContent = `${cmR}`;\n    } else {\n        let { re: lre, im: lim } = cmL;\n        let { re: rre, im: rim } = cmR;\n        \n        const lsign = Math.sign(lim) === -1 ? \"-\" : \"+\";\n        const rsign = Math.sign(lim) === -1 ? \"-\" : \"+\";\n\n        const lreStr = reduceNumber(lre);\n        const rreStr = reduceNumber(rre);\n        const limStr = reduceNumber(Math.abs(lim));\n        const rimStr = reduceNumber(Math.abs(rim));\n\n        domain[0].textContent = `${lreStr} ${lsign} ${limStr}i`;\n        domain[1].textContent = `${rreStr} ${rsign} ${rimStr}i`;\n    }\n}\n\nfunction reduceNumber(n: number) {\n    const s1 = n.toPrecision();\n    const s2 = n.toPrecision(5);\n\n    if (s1.length <= s2.length) return s1;\n    return s2;\n}\n\n/**\n * Function that takes the input complex value to the output one.\n * This is used in the z-coord display.\n * @param z input\n * @returns output\n */\nlet d: ComplexFunction | undefined = (z => z);\n\nlet worker: Worker;\nlet canNest: boolean;\n\n/**\n * On WebKit (iOS), nested Workers are not supported. So this worker tests if they are supported.\n * The result is then used to determine whether or not to use the full main worker or a fallback.\n */\nlet webkitTest = new Worker(new URL(\"./worker/webkitTest\", import.meta.url), {type: \"module\"});\nwebkitTest.postMessage(undefined);\nwebkitTest.onmessage = async function (e: MessageEvent<boolean>) {\n    graphStatus.textContent = \"Initializing workers...\";\n    await waitPageUpdate();\n    canNest = e.data;\n\n    worker = canNest \n        ? new Worker(new URL(\"./worker/main\", import.meta.url), {type: \"module\"}) \n        : new Worker(new URL(\"./worker/chunkLoader\", import.meta.url), {type: \"module\"});\n    \n    await initWorker(worker);\n\n    worker.onmessage = function (e: MessageEvent<MainOut>) {\n        let msg: MainOut = e.data;\n        if (msg.graphID !== graphID) return;\n    \n        if (msg.action === \"chunkDone\") {\n            displayChunk(msg);\n        } else if (msg.action === \"done\") {\n            markDone(msg.time);\n        } else {\n            let _: never = msg;\n        }\n    }\n    \n    worker.onerror = onComputeError;\n    graphButton.disabled = false;\n    webkitTest.terminate();\n\n    document.querySelectorAll(\".initializing\").forEach(e => e.classList.remove(\"initializing\"));\n    graph(); // Don't need to await it. We just want it to happen eventually.\n}\n\n/**\n * Calculate complex coordinates from the current mouse position\n */\nfunction fromMousePosition({pageX, pageY}: {pageX: number, pageY: number}) {\n    const x = pageX - canvas.offsetLeft;\n    const y = pageY - canvas.offsetTop;\n\n    const { width, height } = canvas.getBoundingClientRect();\n    if ( x < 0 || x >= width  ) return;\n    if ( y < 0 || y >= height ) return;\n\n    return Convert.toComplex(x, y);\n}\n\n{\n    let holds = new Map<number, {\n        initX: number,\n        initY: number,\n        lastX: number,\n        lastY: number\n    }>();\n    \n    canvas.addEventListener('pointerdown', e => {\n        let initX, initY, lastX, lastY;\n        lastX = initX = e.clientX;\n        lastY = initY = e.clientY;\n        holds.set(e.pointerId, {initX, initY, lastX, lastY});\n\n        Buffer.prepare();\n    });\n\n    function pointerup(e: PointerEvent) {\n        const pos = holds.get(e.pointerId);\n\n        if (holds.delete(e.pointerId)) {\n            Buffer.release();\n        }\n\n        if (holds.size === 0 && pos) {\n            // if any displacement occurred, then redraw\n            const [dx, dy] = [\n                e.clientX - pos.initX,\n                e.clientY - pos.initY\n            ]\n    \n            if (dx !== 0 || dy !== 0) graph();\n        }\n    }\n\n    document.addEventListener('pointerup', pointerup);\n    document.addEventListener('pointercancel', pointerup);\n\n    function distance(pts: (readonly [x: number, y: number])[]): [center: readonly [x: number, y: number], dist: number] {\n        const length = pts.length;\n        const [scx, scy] = pts.reduce(([ax, ay], [cx, cy]) => [ax + cx, ay + cy] as const);\n        \n        const center = [scx / length, scy / length] as const;\n        const [cx, cy] = center;\n\n        const distances = pts.map(([x, y]) => Math.hypot(x - cx, y - cy));\n        const totalDistance = distances.reduce((acc, cv) => acc + cv);\n\n        return [center, totalDistance];\n    }\n\n    document.addEventListener('pointermove', e => {\n        const pos = holds.get(e.pointerId);\n        if (pos) {\n            if (holds.size === 1) {\n                const [dx, dy] = [\n                    e.clientX - pos.lastX,\n                    e.clientY - pos.lastY\n                ]\n    \n                const dz = Convert.toComplexDisplace(dx, dy);\n                setCenter(center.sub(dz));\n                Buffer.draw();\n    \n                pos.lastX = e.clientX;\n                pos.lastY = e.clientY;\n            } else {\n                let positions = Array.from(holds.values(), ({lastX, lastY}) => [lastX, lastY] as const);\n                const [_, d1] = distance(positions);\n\n                pos.lastX = e.clientX;\n                pos.lastY = e.clientY;\n\n                positions = Array.from(holds.values(), ({lastX, lastY}) => [lastX, lastY] as const);\n                const [c, d2] = distance(positions);\n\n                addZoom(...c, d1 - d2);\n                Buffer.draw();\n            }\n        }\n    });\n}\n\n{\n    let timeout: NodeJS.Timeout;\n    let started = false;\n\n    canvas.addEventListener(\"wheel\", e => {\n        e.preventDefault();\n        clearTimeout(timeout);\n\n        if (!started) {\n            started = true;\n            // wheel start\n\n            Buffer.prepare();\n        }\n        \n\n        // wheel move\n        if (e.ctrlKey) {\n            addZoom(e.clientX, e.clientY, e.deltaY);\n            Buffer.draw();\n        } else {\n            const dx = e.deltaX * .5;\n            const dy = e.deltaY * .5;\n\n            const dz = Convert.toComplexDisplace(dx, dy);\n            setCenter(center.sub(dz));\n            Buffer.draw();\n        }\n        \n        coordinateDisplay(e);\n\n        timeout = setTimeout(() => {\n            // wheel end\n            graph();\n            Buffer.release();\n            started = false;\n        }, 500);\n    }, false);\n}\n\n/**\n * Event listener that displays the complex coordinate of the mouse's current position.\n */\nasync function coordinateDisplay(...args: Parameters<typeof fromMousePosition>) {\n    const pos = fromMousePosition(...args);\n\n    if (typeof pos !== \"undefined\") {\n        const [zElem, fzElem] = zWrapperItems;\n        \n        zElem.textContent  = `${pos}`;\n        fzElem.textContent = `${d?.(pos) ?? \"?\"}`;\n    }\n};\ncanvas.addEventListener('mousemove', coordinateDisplay);\ncontrols.addEventListener('mousemove', coordinateDisplay);\ndocument.addEventListener(\"click\", coordinateDisplay);\n\n// Function input handlers:\n// funcInput.addEventListener('input', () => {\n//     funcInput.value = funcInput.value.replace(/[^a-zA-Z0-9+\\-*/^., ()!]/g, '');\n// });\n\nlet resizeCheck: NodeJS.Timer | undefined;\nwindow.addEventListener(\"resize\", e => {\n    if (typeof resizeCheck !== \"undefined\") clearTimeout(resizeCheck);\n    // if resize is done then perform recompute\n    resizeCheck = setTimeout(async () => await graph(), 200);\n});\n\ndocument.querySelector<HTMLFormElement>(\"form#zoom-form\")!.addEventListener(\"submit\", () => {\n    if (zoomInput.checkValidity()) setScale(2 / +zoomInput.value);\n});\n\n// For things that unconditionally graph after being pressed:\ndocument.querySelectorAll<HTMLFormElement>(\"form.graph-submit\").forEach(f => {\n    f.addEventListener(\"submit\", e => {\n        e.preventDefault();\n        graph();\n    });\n});\ndocument.querySelectorAll<HTMLButtonElement>(\"button.graph-submit\").forEach(b => {\n    b.addEventListener(\"click\", () => {\n        graph();\n    });\n});\n\nasync function graph() {\n    if (graphButton.disabled) return;\n\n    graphStatus.classList.remove(\"hidden\", \"error\", \"done\");\n    graphStatus.textContent = 'Graphing...'\n\n    await updateCanvasDims();\n    await waitPageUpdate();\n    \n    let fstr = funcInput.value;\n    try {\n        const eva = evaluator.compile(fstr);\n        if (eva.type === \"function\") d = eva.f;\n        else d = () => eva.f;\n\n        startWorker(worker, fstr);\n    } catch (e) {\n        onComputeError(e as any);\n        throw e;\n    }\n}\n\n/**\n * @returns a promise that resolves when the DOM updates displaying\n */\nasync function waitPageUpdate() {\n    return new Promise<void>(resolve => {\n        requestAnimationFrame(() => { // this is called before update\n            requestAnimationFrame(() => resolve()); // this is called after update\n        });\n    })\n}\n\nnamespace Convert {\n    /**\n     * Converts a canvas position to a complex position\n     * @param x x (in canvas pixels)\n     * @param y y (in canvas pixels)\n     * @returns the complex position\n     */\n    export function toComplex(x: number, y: number) {\n        const [canvasCenterX, canvasCenterY] = [\n            (canvas.width  - 1) / 2,\n            (canvas.height - 1) / 2\n        ];\n\n        const dz = toComplexDisplace(\n            x - canvasCenterX,\n            y - canvasCenterY\n        );\n        return center.add(dz);\n    }\n\n    /**\n     * Converts canvas displacement to complex displacement\n     * @param dx change in x (in canvas pixels)\n     * @param dy change in y (in canvas pixels)\n     * @returns complex displacement\n     */\n    export function toComplexDisplace(dx: number, dy: number) {\n        const { width, height } = canvas;\n        const [scaleX, scaleY] = xyScale();\n    \n        // 1 unit of scale\n        const [unitX, unitY] = [\n             (width  - 1) / 2,\n            -(height - 1) / 2\n        ];\n    \n        return Complex(dx * scaleX / unitX, dy * scaleY / unitY);\n    }\n\n    /**\n     * Converts a complex position to a canvas position\n     * @param z the complex position\n     * @returns the canvas position\n     */\n    export function toCanvas(z: Complex): [x: number, y: number] {\n        const [canvasCenterX, canvasCenterY] = [\n            (canvas.width  - 1) / 2,\n            (canvas.height - 1) / 2\n        ];\n\n        const dz = z.sub(center);\n        const [dx, dy] = toCanvasDisplace(dz);\n\n        return [canvasCenterX + dx, canvasCenterY + dy];\n    }\n\n    /**\n     * Converts complex displacement to canvas displacement\n     * @param dz complex displacement\n     * @returns canvas displacement\n     */\n    export function toCanvasDisplace(dz: Complex): [dx: number, dy: number] {\n        const { width, height } = canvas;\n        const [scaleX, scaleY] = xyScale();\n    \n        // 1 unit of scale\n        const [unitX, unitY] = [\n             (width  - 1) / 2,\n            -(height - 1) / 2\n        ];\n\n        return [dz.re * unitX / scaleX, dz.im * unitY / scaleY];\n    }\n}\n\n/**\n * Call an \"init\" action on a worker to prepare it for work.\n * @param w Worker to initialize.\n * @returns promise that resolves once it finishes initialization.\n */\nasync function initWorker(w: Worker) {\n    let init: InitIn = { action: \"init\" };\n    w.postMessage(init);\n\n    return new Promise<void>(resolve => {\n        w.onmessage = function(e: MessageEvent<InitOut>) {\n            resolve();\n        }\n    });\n}\n\n/**\n * Instruct the worker to begin processing a function.\n * @param w the worker to instruct.\n * @param fstr the function input\n */\nfunction startWorker(w: Worker, fstr: string) {\n    graphID++;\n    graphID |= 0;\n    \n    let msg: MainIn = {\n        action: \"mainRequest\",\n        pev: partialEvaluate(fstr), \n        cd: {\n            width: canvas.width,\n            height: canvas.height,\n            center: [center.re, center.im],\n            scale,\n        },\n        graphID\n    };\n    w.postMessage(msg);\n}\n\nfunction abortGraph() {\n    graphID++;\n    graphID |= 0;\n}\n\n/**\n * Update the canvas with the loaded chunk\n * @param data the data from the worker\n */\n function displayChunk(data: LoaderOut) {\n    let {chunk, buf} = data;\n\n    let dat = new ImageData(new Uint8ClampedArray(buf), chunk.width, chunk.height);\n    ctx.putImageData(dat, chunk.offx, chunk.offy);\n}\n\n/**\n * Take a string and evaluate it for speed. Simplify the string and also apply the reciprocal optimization.\n * This partial evaluation can then be fully evaluated in the workers.\n * @param fstr string to partially evaluate\n * @returns partially evaluated string\n */\nfunction partialEvaluate(fstr: string): PartialEvaluator {\n    let node = math.simplify(fstr);\n\n    let inverse = false;\n    if (node.type == \"OperatorNode\" && node.fn == 'divide' && !isNaN(+node.args[0])) { // reciprocal func\n        node.args.reverse();\n        node = math.simplify(node);\n        inverse = true;\n    }\n\n    return { fstr: node.toString(), inverse };\n}\n\n/**\n * Display a done message with how long it took to complete\n * @param t time (in ms) it took for the operation to complete\n */\nasync function markDone(t: number) {\n    graphStatus.textContent = `Done in ${t}ms.`;\n    graphStatus.classList.add(\"done\");\n    \n    await waitPageUpdate();\n    clearStatusAfter();\n}\n\n/**\n * Handle errors in computation\n * @param e the error\n */\nfunction onComputeError(e: Error | ErrorEvent) {\n    let err = e instanceof ErrorEvent ? e.message : e;\n\n    graphStatus.classList.add('error');\n    graphStatus.textContent = String(err);\n}\n\n/**\n * Reset the status after a while.\n * @param after how many ms before status should be cleared.\n */\nfunction clearStatusAfter(after = 1000) {\n    setTimeout(() => {\n        if (graphStatus.classList.contains(\"done\")) {\n            graphStatus.classList.remove(\"done\");\n            graphStatus.classList.add(\"hidden\");\n        }\n    }, after);\n}\n\nfunction setProperty<P extends string | number | symbol, V>(o: {[I in P]: V}, p: P, v: V) {\n    if (o[p] !== v) o[p] = v;\n}\n\nfunction setHiddenState(b: HTMLElement, status: boolean) {\n    b.classList.toggle(\"hidden\", status);\n    if (b instanceof HTMLButtonElement) b.disabled = status;\n}","import { Complex } from \"complex.js\";\nexport { Complex };\n\n/**\n * Canvas dimension data (width and height), as well as the current zoom level\n */\nexport interface CanvasData {\n    width: number,\n    height: number,\n\n    center: [number, number],\n    scale: number,\n}\n\n/**\n * Chunk data designating the size of the chunk and its offset from (0, 0) in canvas\n */\nexport interface ChunkData {\n    width: number,\n    height: number,\n    offx: number,\n    offy: number\n}\n\n/**\n * A partially evaluated function string.\n * The string here is already simplified, and the reciprocal optimization has already been applied,\n * but the is not fully computed to allow it to be passed as a Worker message.\n */\nexport interface PartialEvaluator {\n    fstr: string,\n    inverse: boolean\n}\n\ntype Numeric = Complex | number;\n\ninterface FunctionEvaluator { \n    type: \"function\",\n    f: ComplexFunction\n}\ninterface ConstantEvaluator { \n    type: \"constant\",\n    f: Numeric\n}\n\n/**\n * A fully evaluated function.\n * This has the sufficient knowledge to compute an output color from an input complex number.\n */\nexport interface Evaluator {\n    evaluator: FunctionEvaluator | ConstantEvaluator,\n\n    /**\n     * Signifies whether to use the reciprocal optimization: bfunc(1 / fz) = 1 - bfunc(fz)\n     */\n    inverse: boolean\n}\n\n/**\n * A function that takes a complex number to another complex number\n */\nexport type ComplexFunction = (z: Complex) => Numeric;\n\nnamespace Messages {\n    /**\n     * A request to compute the function across an entire canvas\n     */\n    export interface MainRequest {\n        action: \"mainRequest\",\n        pev: PartialEvaluator,\n        cd: CanvasData,\n        graphID: number\n    };\n    \n    /**\n     * Designation that the canvas is fully computed\n     */\n    export interface GraphDone {\n        action: \"done\",\n        time: number,\n        graphID: number\n    };\n\n    /**\n     * A request to compute the function across a chunk\n     */\n    export interface ChunkRequest {\n        action: \"chunkRequest\",\n        pev: PartialEvaluator,\n        cd: CanvasData,\n        chunk: ChunkData,\n        graphID: number\n    };\n\n    /**\n     * Designation that the chunk is fully computed (with the computed data from the chunk)\n     */\n    export interface ChunkDone {\n        action: \"chunkDone\",\n        chunk: ChunkData,\n        buf: ArrayBuffer,\n        graphID: number\n    };\n\n    /**\n     * Call to initialize\n     */\n    export interface Init {\n        action: \"init\"\n    };\n\n    /**\n     * Return call to designate initialization completed\n     */\n    export interface Ready {\n        action: \"ready\"\n    }\n\n}\nexport type InitIn = Messages.Init;\nexport type InitOut = Messages.Ready;\n\nexport type MainIn = Messages.MainRequest;\nexport type MainOut = Messages.ChunkDone | Messages.GraphDone;\n\nexport type LoaderIn = Messages.ChunkRequest;\nexport type LoaderOut = Messages.ChunkDone;","import { all, create } from \"mathjs\";\nimport { Complex, ComplexFunction, Evaluator } from \"./types\";\nconst math = create(all);\n\ntype Numeric = Complex | number;\ntype ComplexMethod<R = Numeric> = (this: Complex, ...args: any[]) => R;\n\n/**\n * A mapping of names to constants which they represent:\n */\nconst constants = {\n    pi: Complex.PI,\n    e: Complex.E,\n    i: Complex.I,\n    inf: Complex.INFINITY,\n    infinity: Complex.INFINITY,\n    epsilon: Complex.EPSILON,\n    nan: Complex.NAN\n} as const;\n\n/**\n * A mapping of names to functions (C -> C) which they represent.\n */\nconst functions: { readonly [s: string]: ComplexMethod<any> } = {\n    gamma() { return math.gamma(this as any); }, // slower than pure Complex.js, but oh well\n    ln: Complex.prototype.log,\n} as const;\n\n/**\n * A mapping of operators to their respective functions.\n */\nconst operators: { [s: string]: ComplexMethod } = {\n    add:        Complex.prototype.add,\n    unaryPlus() { return this; },\n    subtract:   Complex.prototype.sub,\n    unaryMinus: Complex.prototype.neg,\n    multiply:   Complex.prototype.mul,\n    divide:     Complex.prototype.div,\n    pow:        Complex.prototype.pow,\n    factorial() { return math.gamma<any>(this.add(1)); },\n} as const;\n\nnamespace Results {\n    export interface Z {\n        type: \"z\"\n    }\n\n    export interface Constant {\n        type: \"constant\",\n        value: Numeric\n    }\n\n    export interface Method {\n        type: \"method\",\n        f: ComplexMethod<any>\n    }\n    \n    export interface Function {\n        type: \"function\",\n        f: ComplexFunction\n    }\n}\n\ntype LookupResult = Results.Z | Results.Method | Results.Constant;\ntype FoldResult   = Results.Z | Results.Function | Results.Constant;\n\nnamespace ComplexMethod {\n    /**\n     * Checks if this is a valid method on Complex\n     * @param k the method to check\n     * @returns if it is\n     */\n    export function isMethod(k: string): k is keyof Complex {\n        return k in Complex.prototype;\n    }\n\n    /**\n     * Gets a complex method from the given key.\n     * @param k key\n     * @returns a complex method (this will be the prototype method if already a method or a wrapper method if not)\n     */\n    export function get(k: keyof Complex): ComplexMethod<any> {\n        const m = Complex.prototype[k];\n    \n        if (m instanceof Function) return m;\n        return function() { return this[k]; }\n    }\n\n    export function wrap(f: ComplexFunction): ComplexMethod {\n        return function() { return f(this); }\n    }\n}\n\n/**\n * Get a value from a specified object or `undefined` if the key is not present.\n * @param o object\n * @param k key to get\n * @returns value (or `undefined` if not present)\n */\nfunction getFrom<O>(o: O, k: string): O[keyof O] | void {\n    if (k in o) return (o as any)[k];\n}\n\n/**\n * Check if the symbol is in one of the symbol mappings\n * @param n Symbol node to look up\n * @returns the lookup result or an error if not present\n */\nfunction lookup(n: math.SymbolNode): LookupResult {\n    let { name } = n;\n\n    name = name.toLowerCase();\n    if (name === \"z\") return { type: \"z\" };\n\n    if (ComplexMethod.isMethod(name)) return { type: \"method\", f: ComplexMethod.get(name) }\n    if (name in constants) return {\n        type: \"constant\", \n        value: constants[name as keyof typeof constants]\n    }\n    if (name in functions) return {\n        type: \"method\",\n        f: functions[name]\n    }\n\n    throw new Error(`Unrecognized symbol [${name}]`)\n}\n\n/**\n * Take a `FoldResult` object and evaluate it with the specified z-value\n * @param val the `FoldResult`\n * @param z value z should be set to\n * @returns the resulting value\n */\nfunction unwrap(val: FoldResult, z: Complex): Numeric {\n    if (val.type === \"constant\") return val.value;\n    if (val.type === \"function\") return val.f(z);\n    if (val.type === \"z\") return z;\n\n    let _: never = val;\n    throw new Error(`Unrecognized fold result ${(val as any).type}`);\n}\n\nfunction createFunction(\n    f: ComplexMethod<any>, \n    args: math.MathNode[]\n): FoldResult {\n    let fargs = args.map(node => fold(node));\n\n    // if all constants, this can be computed as a constant\n    if (fargs.every((a): a is Results.Constant => a.type === \"constant\")) {\n        const [self, ...rest] = fargs.map(c => c.value);\n\n        const cself = Complex(self);\n        return { type: \"constant\", value: f.apply(cself, rest) };\n    }\n\n    const [self, ...rest] = fargs;\n    \n    return {\n        type: \"function\",\n        f: z => {\n            let a = Complex(unwrap(self, z));\n            let b = rest.map(arg => unwrap(arg, z));\n\n            return f.apply(a, b);\n        }\n    };\n}\n\n/**\n * Fold a node into a usable function\n * @param n Node to fold\n * @returns Function representing the tree\n */\nfunction fold(n: math.MathNode): FoldResult {\n    switch (n.type) {\n        case \"ConstantNode\":\n            return { type: \"constant\", value: n.value };\n        case \"FunctionNode\": {\n            const lk = lookup(n.fn);\n\n            if (lk.type === \"method\") {\n                return createFunction(lk.f, n.args);\n            } else if (lk.type === \"constant\") {\n                throw new Error(`Expected function, got constant [${n.fn.name} = ${lk.value}]`);\n            } else if (lk.type === \"z\") {\n                throw new Error(`Expected function, got [z]`);\n            }\n\n            let _: never = lk;\n            throw new Error(`Expected function, got [${(lk as any).type}]`);\n        }\n        case \"OperatorNode\": {\n            const op = getFrom(operators, n.fn);\n            const f = op ? createFunction(op, n.args) : undefined;\n\n            if (typeof f === \"undefined\") throw new Error(`Unexpected operator [${n.op}]`);\n            return f;\n        }\n        case \"ParenthesisNode\":\n            return fold(n.content);\n        case \"SymbolNode\": {\n            const lk = lookup(n);\n\n            // bare symbols cannot evaluate to methods.\n            if (lk.type === \"method\") {\n                throw new Error(`Unexpected function [${n.name}]`);\n            }\n\n            return lk;\n        }\n        default:\n            throw new Error(`Cannot parse [${n.type}] into complex function`);\n    }\n}\n\n/**\n * Compile a function string into a usable function\n * @param fstr string to compile\n * @returns the function\n */\nexport function compile(fstr: string): Evaluator[\"evaluator\"] {\n    const fr = fold(math.parse(fstr));\n\n    switch (fr.type) {\n        case \"constant\":\n            return {\n                type: \"constant\",\n                f: fr.value,\n            }\n        case \"function\":\n            return fr\n        case \"z\":\n            return {\n                type: \"function\",\n                f: z => z\n            }\n        default:\n            let _: never = fr;\n            throw new Error(`Invalid fold result type ${(fr as any).type}`);\n    }\n}","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dq1cl\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"egthy\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ainsM\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);"],"names":["$ccdddb66dd5c9e59$export$6503ec6e8aabbaf","$ccdddb66dd5c9e59$export$f7ad0328861e2f03","$ccdddb66dd5c9e59$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$jPsve","$hC7R7","$e3eae38bb1763d86$var$math","create","all","$e3eae38bb1763d86$var$constants","pi","Complex","PI","e","E","I","inf","INFINITY","infinity","epsilon","EPSILON","nan","NAN","$e3eae38bb1763d86$var$functions","gamma","this","ln","prototype","log","$e3eae38bb1763d86$var$operators","add","unaryPlus","subtract","sub","unaryMinus","neg","multiply","mul","divide","div","pow","factorial","$e3eae38bb1763d86$var$ComplexMethod","$e3eae38bb1763d86$var$lookup","n","name","toLowerCase","type","isMethod","f","get","value","$e3eae38bb1763d86$var$unwrap","val","z","$e3eae38bb1763d86$var$createFunction","args","fargs","map","node","$e3eae38bb1763d86$var$fold","every","a","self","rest","c","cself","apply","b","arg","lk","fn","op","o","k","$e3eae38bb1763d86$var$getFrom","undefined","content","m","Function","wrap","$7b066cf9bf825db5$var$math","$7b066cf9bf825db5$var$wrapper","document","querySelector","$7b066cf9bf825db5$var$controls","$7b066cf9bf825db5$var$funcInput","$7b066cf9bf825db5$var$graphButton","$7b066cf9bf825db5$var$graphStatus","$7b066cf9bf825db5$var$zWrapperItems","querySelectorAll","$7b066cf9bf825db5$var$zoomButtons","$7b066cf9bf825db5$var$zoomInput","$7b066cf9bf825db5$var$centerInputs","$7b066cf9bf825db5$var$recenterButton","$7b066cf9bf825db5$var$homeButton","$7b066cf9bf825db5$var$domain","$7b066cf9bf825db5$var$canvas","createElement","$7b066cf9bf825db5$var$ctx","getContext","alpha","async","$7b066cf9bf825db5$var$updateCanvasDims","$7b066cf9bf825db5$var$waitPageUpdate","width","height","getBoundingClientRect","$7b066cf9bf825db5$var$setProperty","Math","trunc","globalCompositeOperation","$7b066cf9bf825db5$var$updateDomain","appendChild","$7b066cf9bf825db5$var$bufCanvas","$7b066cf9bf825db5$var$bctx","$7b066cf9bf825db5$var$Buffer","bufProps","refs","mat","identity","prepare","imageSmoothingEnabled","drawImage","release","max","draw","$7b066cf9bf825db5$var$graphID","setTransform","resetTransform","borrow","drawIfOwner","owner","translate","dx","dy","matrix","scaleAround","scale1","center1","chain","done","$7b066cf9bf825db5$var$center","ZERO","$7b066cf9bf825db5$var$setCenter","bufSettings","updateBuffer","dz","displace","$7b066cf9bf825db5$var$Convert","toCanvasDisplace","re","im","$7b066cf9bf825db5$var$setHiddenState","equals","$7b066cf9bf825db5$var$scale","forEach","addEventListener","$7b066cf9bf825db5$var$setScale","Number","scaleRatio","style","disabled","$7b066cf9bf825db5$var$addZoom","mouseX","mouseY","deltaY","factor","mousePos","toComplex","disp","zoomIn","zoomReset","zoomOut","$7b066cf9bf825db5$var$xyScale","limitDomain","getComputedStyle","documentElement","getPropertyValue","scaleX","scaleY","range","cmL","cmR","lre","lim","rre","rim","lsign","sign","rsign","lreStr","$7b066cf9bf825db5$var$reduceNumber","rreStr","limStr","abs","rimStr","textContent","s1","toPrecision","s2","$7b066cf9bf825db5$var$worker","$7b066cf9bf825db5$var$canNest","$7b066cf9bf825db5$var$d","$3c5948be07c71a88$exports","workerUrl","origin","isESM","location","source","stringify","URL","createObjectURL","Blob","$392807f48fc53276$var$url","resolve","import","meta","url","$392807f48fc53276$exports","toString","$7b066cf9bf825db5$var$webkitTest","Worker","postMessage","$ce2028ebd3de55c5$var$url","$ce2028ebd3de55c5$exports","$7b066cf9bf825db5$var$resizeCheck","$19e0631a78af0647$var$url","$19e0631a78af0647$exports","onmessage","e1","data","w","init","action","Promise","$7b066cf9bf825db5$var$initWorker","msg","graphID","chunk","buf","dat","ImageData","Uint8ClampedArray","putImageData","offx","offy","$7b066cf9bf825db5$var$displayChunk","t","classList","after","setTimeout","contains","remove","$7b066cf9bf825db5$var$clearStatusAfter","$7b066cf9bf825db5$var$markDone","time","onerror","$7b066cf9bf825db5$var$onComputeError","terminate","$7b066cf9bf825db5$var$graph","holds","Map","$7b066cf9bf825db5$var$pointerup","pos","pointerId","delete","size","clientX","initX","clientY","initY","$7b066cf9bf825db5$var$distance","pts","scx","scy","reduce","ax","ay","cx","cy","center2","cx1","cy1","x","y","hypot","acc","cv","lastX","lastY","set","toComplexDisplace","positions","Array","from","values","_","d1","d2","timeout","started","preventDefault","clearTimeout","ctrlKey","deltaX","$7b066cf9bf825db5$var$coordinateDisplay","pageX","pageY","offsetLeft","offsetTop","$7b066cf9bf825db5$var$fromMousePosition","zElem","fzElem","fstr","eva","fr","$e3eae38bb1763d86$export$ef7acd7185315e22","pev","$7b066cf9bf825db5$var$partialEvaluate","cd","center","$7b066cf9bf825db5$var$startWorker","requestAnimationFrame","simplify","inverse","isNaN","reverse","err","ErrorEvent","message","String","p","v","status","toggle","HTMLButtonElement","window","checkValidity","unitX","unitY","canvasCenterX","canvasCenterY","toCanvas"],"version":3,"file":"complexgrapher.21be10d3.js.map"}