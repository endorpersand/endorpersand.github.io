{"mappings":"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","sources":["node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_private_field_set.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_private_method_get.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_private_method_init.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_check_private_static_access.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_static_private_field_spec_get.mjs","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_define_property.mjs","src/index/boxes.ts","node_modules/.pnpm/@swc+helpers@0.4.2/node_modules/@swc/helpers/src/_class_private_field_init.mjs"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateMethodInit(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n","export default function _classCheckPrivateStaticAccess(receiver, classConstructor) { \n  if (receiver !== classConstructor) {\n    throw new TypeError(\"Private static access of wrong provenance\");\n  } \n}\n","import classCheckPrivateStaticAccess from './_class_check_private_static_access.mjs';\nimport classCheckPrivateStaticFieldDescriptor from './_class_check_private_static_access.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {\n  classCheckPrivateStaticAccess(receiver, classConstructor);\n  classCheckPrivateStaticFieldDescriptor(descriptor, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","type Coord = [number, number]; // each cell is 1 unit\ntype NormCoord = [number, number]; // the entire wrapper 1 unit\ntype RGB = [number, number, number];\n\nlet wrapper = document.querySelector('.wrapper')!;\n\nclass SquareTracker {\n    static #MIN_ROWS = 3;\n    #cols: number;\n    readonly projectSquares: HTMLElement[];\n    placeholderSquares: HTMLElement[];\n    corners: [RGB, RGB, RGB, RGB] = [ // top right, bottom right, top left, bottom left\n        [0x77, 0x77, 0x77],\n        [0x77, 0x77, 0x77],\n        [0x77, 0x77, 0x77],\n        [0x77, 0x77, 0x77]\n    ];\n\n    constructor() {\n        this.#cols = +getComputedStyle(document.documentElement).getPropertyValue('--cols');\n\n        this.projectSquares = [...wrapper.querySelectorAll('a')];\n        for (let s of this.projectSquares) {\n            let span = document.createElement('span');\n            span.classList.add('colhex');\n            s.appendChild(span);\n\n            s.classList.add('box');\n        }\n\n        this.placeholderSquares = [];\n        for (let i = this.squares; i < (this.cols * SquareTracker.#MIN_ROWS); i++) {\n            this.#addSquare();\n        }\n    }\n\n    get squares() {\n        return this.projectSquares.length + this.placeholderSquares.length;\n    }\n\n    get cols() {\n        return this.#cols;\n    }\n    set cols(value) {\n        if (value != this.#cols) {\n            this.#cols = value;\n            this.#rebalance();\n        }\n    }\n\n    get rows(): number {\n        return this.squares / this.cols;\n    }\n\n    #addSquare() {\n        let box = document.createElement('div');\n        let title = document.createElement('div');\n        let desc = document.createElement('div');\n        let colhex = document.createElement('span');\n        \n        title.classList.add('title');\n        desc.classList.add('desc');\n        colhex.classList.add('colhex');\n        \n        box.classList.add('box');\n        box.append(title, desc, colhex);\n        box.addEventListener(\"click\", this.regenColors.bind(this, false));\n    \n        wrapper.appendChild(box);\n        this.placeholderSquares.push(box);\n    }\n\n    #removeSquare() {\n        this.placeholderSquares.pop()?.remove();\n    }\n\n    #rebalance() {\n        let squares = this.squares;\n        // n = number of squares that should be on board\n        let n = Math.max(this.#cols * SquareTracker.#MIN_ROWS, this.projectSquares.length);\n        n = Math.ceil(n / this.#cols) * this.#cols;\n\n        if (squares == n) return;\n        if (squares > n) {\n            for (let i = squares; i > n; i--) {\n                this.#removeSquare();\n            }\n        } else if (squares < n) {\n            for (let i = squares; i < n; i++) {\n                this.#addSquare();\n            }\n        }\n\n        this.regenColors(true);\n    }\n\n    forEach(callback: (value: HTMLElement, index: number) => void) {\n        let i = 0;\n        for (let e of this.projectSquares) callback(e, i++);\n        for (let e of this.placeholderSquares) callback(e, i++);\n    }\n\n    regenColors(useCurrentCorners: boolean = false) {\n        if (!useCurrentCorners) this.corners = Array.from({length: 4}, () => randRGB(0x50)) as [RGB, RGB, RGB, RGB];\n        let corners = this.corners;\n        \n        if (this.#cols < 3) {\n            // use TL + BR boxes rather than the corners to make a consistent grid (rather than 2 columns of color)\n            let corners2: [RGB, RGB] = [corners[2], corners[1]];\n            this.assignColors(i => interpolate2(corners2, asCoord(i)), useCurrentCorners);\n        } else {\n            this.assignColors(i => interpolate4(corners, asNormCoord(i)), useCurrentCorners);\n        }\n\n    }\n\n    assignColors(callback: (cellIndex: number) => RGB, skipTransition = false) {\n        squares.forEach((s, i) => {\n            let clr = callback(i);\n            if (skipTransition) {\n                s.classList.add(\"no-transition\");\n                s.offsetHeight;\n            }\n            s.style.backgroundColor = hex(clr);\n    \n            s.querySelector('.colhex')!.textContent = hex(clr);\n        });\n\n        if (skipTransition) {\n            // return transition after color change\n            requestAnimationFrame(() => { // this is called before update\n                requestAnimationFrame(() => { // this is called after update\n                    squares.forEach(s => {\n                        s.classList.remove(\"no-transition\");\n                    });\n                });\n            });\n        }\n    }\n\n}\nlet squares = new SquareTracker();\nsquares.regenColors();\n\nwindow.addEventListener(\"resize\", e => {\n    squares.cols = +getComputedStyle(wrapper).getPropertyValue('--cols');\n})\nfunction asCoord(i: number): Coord {\n    // takes an index in the array, maps it to its [row, col] value\n    return [Math.floor(i / squares.cols), i % squares.cols];\n}\nfunction asNormCoord(i: number): NormCoord {\n    // takes an index in the array, maps it to its NormCoord value\n    let [r, c] = asCoord(i);\n    return [r / (squares.rows - 1), c / (squares.cols - 1)];\n}\n\nfunction randInt(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nfunction randRGB(min = 0, max = 256): RGB {\n    // [min, max)\n    return Array.from({length: 3}, () => randInt(min, max)) as RGB;\n}\nfunction hex(arr: RGB) {\n    // converts rgb array => hex notation\n    return `#${arr.map(x => Math.round(x).toString(16).padStart(2, \"0\")).join('')}`\n}\n\nfunction zip<A extends any[]>(...v: {[I in keyof A]: A[I][]}): A[] {\n    let length = v[0].length;\n    return Array.from({length}, (_, i) => v.map(a => a[i]) as A);\n}\n\nfunction lerp<T extends number[]>(pts: [T, T], dist: number): T {\n    let [p, q] = pts;\n    let length = p.length;\n    return Array.from({length}, (_, i) => {\n        let a = p[i], b = q[i];\n        return a + dist * (b - a);\n    }) as T;\n}\n\nfunction bilerp<T extends number[]>(pts: [T, T, T, T], c: NormCoord): T {\n    type ArrPair = [T, T];\n    let [px, py] = c;\n    let [top, bottom] = [pts.slice(0, 2) as ArrPair, pts.slice(2, 4) as ArrPair]\n    return lerp([lerp(bottom, px), lerp(top, px)], py);\n}\n\n// interpolate given that each corner is assigned a color\nfunction interpolate4(clrs: [RGB, RGB, RGB, RGB], c: NormCoord) {\n    // weight = how much each of the 4 points are valued based on the distance point c is from the corner\n    let weights = bilerp<[number, number, number, number]>([\n        [1,0,0,0],\n        [0,1,0,0],\n        [0,0,1,0],\n        [0,0,0,1]\n    ], c);\n\n    return Array.from({length: 3}, (_, i) => {\n        let channels = clrs.map(clr => clr[i]);\n\n        let sqsum = zip(channels, weights)\n            .map(([c, w]) => w * c * c)\n            .reduce((acc, cv) => acc + cv);\n        \n        return Math.round(Math.sqrt(sqsum));\n    }) as RGB;\n}\n\nfunction manhattan(p: Coord, q: Coord): number {\n    return zip(p, q)\n        .map(([px, qx]) => Math.abs(px - qx))\n        .reduce((acc, cv) => acc + cv);\n}\n\n// interpolate given that the top left and bottom right are assigned colors\nfunction interpolate2(clrs: [RGB, RGB], c: Coord) {\n    // weight = how much each of the 2 points are valued based on the distance point c is from the corner\n    let [aw, bw] = [\n        manhattan([0, 0], c),\n        manhattan([squares.rows - 1, squares.cols - 1], c),\n    ];\n    let weights = [\n        bw / (aw + bw), // note, flipped\n        aw / (aw + bw)\n    ];\n\n    return Array.from({length: 3}, (_, i) => {\n        let channels = clrs.map(clr => clr[i]);\n\n        let sqsum = zip(channels, weights)\n            .map(([c, w]) => w * c * c)\n            .reduce((acc, cv) => acc + cv);\n        \n        return Math.round(Math.sqrt(sqsum));\n    }) as RGB;\n}\n\nexport {}; // recognize as module","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n"],"names":["$fe1f6de5051e7218$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$0d629896566da2a8$export$2e2bcd8739ae039","descriptor","call","value","$5c00900455b684b2$export$2e2bcd8739ae039","$87480ed68f13d1b3$export$2e2bcd8739ae039","obj","privateCollection","$f255715f1bff517f$export$2e2bcd8739ae039","set","writable","$8371d825d816d5ae$export$2e2bcd8739ae039","$9f19d00d29af0702$export$2e2bcd8739ae039","privateSet","fn","$ae41b7eea53d608d$export$2e2bcd8739ae039","add","$8bb1cf57c2085f19$export$2e2bcd8739ae039","classConstructor","$8c42590103442dd0$export$2e2bcd8739ae039","$db787e74df3ac390$export$2e2bcd8739ae039","key","Object","defineProperty","enumerable","configurable","$d05d6add4b7bc7a0$var$wrapper","document","querySelector","$d05d6add4b7bc7a0$var$_cols","WeakMap","$d05d6add4b7bc7a0$var$_addSquare","WeakSet","$d05d6add4b7bc7a0$var$_removeSquare","$d05d6add4b7bc7a0$var$_rebalance","$d05d6add4b7bc7a0$var$SquareTracker","squares","this","projectSquares","length","placeholderSquares","cols","$d05d6add4b7bc7a0$var$rebalance","rows","forEach","callback","i","e","e1","regenColors","useCurrentCorners","corners","Array","from","min","max","Math","floor","random","$d05d6add4b7bc7a0$var$randInt","$d05d6add4b7bc7a0$var$randRGB","corners2","assignColors","clrs","c2","aw","bw","$d05d6add4b7bc7a0$var$manhattan","$d05d6add4b7bc7a0$var$squares","weights","_","sqsum","$d05d6add4b7bc7a0$var$zip","map","clr","c","w","reduce","acc","cv","round","sqrt","$d05d6add4b7bc7a0$var$interpolate2","$d05d6add4b7bc7a0$var$asCoord","c1","pts","px","py","top","bottom","slice","$d05d6add4b7bc7a0$var$lerp","$d05d6add4b7bc7a0$var$bilerp","$d05d6add4b7bc7a0$var$interpolate4","r","$d05d6add4b7bc7a0$var$asNormCoord","skipTransition","s","classList","offsetHeight","style","backgroundColor","$d05d6add4b7bc7a0$var$hex","textContent","requestAnimationFrame","remove","constructor","getComputedStyle","documentElement","getPropertyValue","querySelectorAll","span","createElement","appendChild","$d05d6add4b7bc7a0$var$_MIN_ROWS","$d05d6add4b7bc7a0$var$addSquare","box","title","desc","colhex","append","addEventListener","bind","push","$d05d6add4b7bc7a0$var$removeSquare","pop","squares1","n","ceil","i1","arr","x","toString","padStart","join","v","a","dist","p","q","b","qx","abs","window"],"version":3,"file":"index.95848df7.js.map"}