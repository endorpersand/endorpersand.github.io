{"mappings":"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","sources":["src/gradient/gradient.ts"],"sourcesContent":["declare var OffscreenCanvas: any;\n\nconst canvas = document.querySelector('canvas')! as HTMLCanvasElement;\nconst ctx = canvas.getContext('2d')!;\nlet ipol = (document.querySelector(\"input[name='ipol'][checked]\")! as HTMLInputElement).value;\n\nlet ipolRadios = document.querySelectorAll('input[type=radio]'),\n    coloradd = document.querySelector('#coloradd')! as HTMLButtonElement,\n    colorsWrapper = document.querySelector('#colors')! as HTMLDivElement;\n\ntype RGB = [number, number, number];\n\ndocument.querySelectorAll('input[type=color]').forEach(x => x.addEventListener('change', update))\nipolRadios.forEach(x => x.addEventListener('change', e => {\n    ipol = (x as HTMLInputElement).value;\n    update();\n}));\n\ncoloradd.addEventListener('click', () => {\n    let div = colorDiv();\n    colorsWrapper.insertBefore(div, coloradd);\n\n    let buts = colorRMButtons();\n    if (buts.length > 2) {\n        for (let b of buts) {\n            b.disabled = false;\n        }\n    }\n    update();\n})\n\ndocument.querySelectorAll('.colorrm').forEach(e => e.addEventListener('click', () => {\n    colorsWrapper.removeChild(e.parentElement!);\n    let buts = colorRMButtons();\n    if (buts.length < 3) {\n        for (let b of buts) b.disabled = true;\n    }\n    update();\n}))\nupdate();\n\nfunction getColors() {\n    let cinputs =  document.querySelectorAll('input[type=color]');\n    return [...cinputs].map(x => (x as HTMLInputElement).value);\n}\n\nfunction rgb(hex: string): RGB {\n    return [hex.slice(1,3), hex.slice(3,5), hex.slice(5,7)].map(x => parseInt(x, 16)) as RGB;\n}\n\nfunction colorRMButtons() {\n    return document.querySelectorAll('.colorrm') as NodeListOf<HTMLButtonElement>;\n}\n\nfunction interpolate(a: number, b: number, prog: number) {\n    return Math.hypot(a * Math.sqrt(1 - prog), b * Math.sqrt(prog));\n}\nfunction colorDiv(hex = '#000000') {\n    let div = document.createElement('div');\n\n    let clr = document.createElement('input');\n    clr.type = 'color';\n    clr.value = hex;\n    clr.addEventListener('change', update);\n\n    let button = document.createElement('button');\n    button.classList.add('colorrm');\n    button.textContent = 'x';\n    button.addEventListener('click', () => {\n        colorsWrapper.removeChild(button.parentElement!);\n        let buts = colorRMButtons();\n        if (buts.length < 3) {\n            for (let b of buts) b.disabled = true;\n        }\n        update();\n    });\n        \n    div.appendChild(clr);\n    div.appendChild(button);\n    return div;\n}\n\nfunction update() {\n    let clrs = getColors();\n    let lind = clrs.length - 1;\n    switch (ipol) {\n        case 'lin':\n            let grad = ctx.createLinearGradient(0, 0, canvas.width, 0);\n            for (var [i, c] of clrs.entries()) grad.addColorStop(i / lind, c);\n            ctx.fillStyle = grad;\n            break;\n        case 'rms':\n            let ocanvas: HTMLCanvasElement;\n            if (\"OffscreenCanvas\" in globalThis) {\n                ocanvas = new OffscreenCanvas(canvas.width, 1);\n            } else {\n                ocanvas = document.createElement('canvas');\n                [ocanvas.width, ocanvas.height] = [canvas.width, 1];\n            }\n            let octx = ocanvas.getContext('2d')!;\n\n            let dat = octx.createImageData(ocanvas.width, 1);\n            let arr32 = new Uint32Array(dat.data.buffer);\n            let arrlind = arr32.length - 1;\n            for (var i = 0; i < arr32.length; i++) {\n                let pos = (i / arrlind) * lind;\n                let [j, prog] = [Math.floor(pos), pos % 1];\n                let [a, b] = [clrs[j], clrs[j + 1] ?? '#000000'].map(x => rgb(x));\n                let c = Array.from({length: 3}, (_, i) => interpolate(a[i], b[i], prog));\n                arr32[i] = 0xFF << 24\n                         | c[2] << 16\n                         | c[1] <<  8\n                         | c[0] <<  0;\n            }\n            octx.putImageData(dat, 0, 0);\n            let pat = ctx.createPattern(ocanvas, 'repeat-y')!;\n            ctx.fillStyle = pat;\n            break;\n\n    }\n\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n}"],"names":["$d246116f12813c68$var$canvas","document","querySelector","$d246116f12813c68$var$ctx","getContext","$d246116f12813c68$var$ipol","value","$d246116f12813c68$var$ipolRadios","querySelectorAll","$d246116f12813c68$var$coloradd","$d246116f12813c68$var$colorsWrapper","$d246116f12813c68$var$colorRMButtons","$d246116f12813c68$var$interpolate","a","b","prog","Math","hypot","sqrt","$d246116f12813c68$var$update","clrs","map","x","lind","length","grad","createLinearGradient","width","i1","c","entries","addColorStop","fillStyle","ocanvas","globalThis","OffscreenCanvas","createElement","height","octx","dat","createImageData","arr32","Uint32Array","data","buffer","arrlind","pos","j","floor","$d246116f12813c68$var$rgb","hex","slice","parseInt","Array","from","_","i","putImageData","pat","createPattern","fillRect","forEach","addEventListener","e","div","clr","type","button","classList","add","textContent","removeChild","parentElement","buts","disabled","appendChild","$d246116f12813c68$var$colorDiv","insertBefore"],"version":3,"file":"gradient.bab615ac.js.map"}