{"mappings":"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","sources":["node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-ebf94ac01712eea4.js","src/complexgrapher/complexgrapher.ts","src/complexgrapher/types.ts","src/complexgrapher/evaluator.ts","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-2fbe291746b8d227.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-d76853abe3dd4514.js","node_modules/.pnpm/@parcel+runtime-js@2.6.2_@parcel+core@2.6.2/node_modules/@parcel/runtime-js/lib/runtime-414f81c63299e445.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"fujT7\\\":\\\"complexgrapher.0a6af6c9.js\\\",\\\"dq1cl\\\":\\\"webkitTest.5c78f70c.js\\\",\\\"egthy\\\":\\\"main.512522d2.js\\\",\\\"1GZwD\\\":\\\"main.66bf90c5.js\\\",\\\"ainsM\\\":\\\"chunkloader.bc8a9feb.js\\\",\\\"bumwR\\\":\\\"chunkloader.c3aaeffc.js\\\",\\\"2KAe5\\\":\\\"complexgrapher.27645573.js\\\"}\"));","import { create, all } from \"mathjs\";\nimport { Complex, ComplexFunction, InitIn, InitOut, LoaderOut, MainIn, MainOut, PartialEvaluator } from \"./types\";\nimport * as evaluator from \"./evaluator\";\nconst math = create(all);\n\nconst wrapper        = document.querySelector<HTMLDivElement>('div#wrapper')!,\n      controls       = document.querySelector<HTMLDivElement>('div#controls')!,\n      funcInput      = document.querySelector<HTMLInputElement>('input#func-input')!,\n      graphButton    = document.querySelector<HTMLButtonElement>('#graph-button')!,\n      graphStatus    = document.querySelector<HTMLDivElement>('div#graph-status')!,\n      zWrapperItems  = document.querySelectorAll<HTMLElement>('div#z-wrapper code')!,\n      zoomButtons    = document.querySelectorAll<HTMLButtonElement>('button.zoom'),\n      zoomInput      = document.querySelector<HTMLInputElement>('input#zoom-input')!,\n      centerInputs   = document.querySelectorAll<HTMLInputElement>(\"input.center-input\"),\n      recenterButton = document.querySelector<HTMLButtonElement>(\"button#recenter-button\")!,\n      homeButton     = document.querySelector<HTMLButtonElement>(\"button#home-button\")!,\n      domain         = document.querySelectorAll<HTMLElement>('.domain');\n\nconst canvas = document.createElement(\"canvas\");\nconst ctx = canvas.getContext('2d', {alpha: false})!;\n\nwrapper.appendChild(canvas);\n\nasync function updateCanvasDims() {\n    await waitPageUpdate();\n    const { width, height } = canvas.getBoundingClientRect();\n    setProperty(canvas, \"width\",  Math.trunc(width));\n    setProperty(canvas, \"height\", Math.trunc(height));\n    ctx.globalCompositeOperation = \"copy\";\n\n    updateDomain();\n}\nupdateCanvasDims();\n\nconst bufCanvas = document.createElement(\"canvas\");\nconst bctx = bufCanvas.getContext('2d', {alpha: false})!;\nconst bufProps = {\n    refs: 0,\n    mat: math.identity(3) as math.Matrix,\n};\n\nfunction copyToBuffer() {\n    if (!bufProps.refs) {\n        bufCanvas.width = canvas.width;\n        bufCanvas.height = canvas.height;\n        bctx.globalCompositeOperation = \"copy\";\n        bctx.imageSmoothingEnabled = false;\n        bctx.drawImage(canvas, 0, 0);\n\n        bufProps.refs++;\n        bufProps.mat = math.identity(3) as any;\n    }\n}\nfunction drawBuffer() {\n    if (bufProps.refs) {\n        const { mat } = bufProps;\n\n        ctx.setTransform(\n            mat.get([0, 0]),\n            mat.get([1, 0]),\n            mat.get([0, 1]),\n            mat.get([1, 1]),\n            mat.get([0, 2]),\n            mat.get([1, 2]),\n        )\n        ctx.drawImage(bufCanvas, 0, 0);\n        ctx.resetTransform();\n    }\n}\nfunction translateBuffer(dx: number, dy: number) {\n    bufProps.mat = math.multiply(\n        math.matrix([\n            [1, 0, dx],\n            [0, 1, dy],\n            [0, 0,  1],\n        ]),\n        bufProps.mat\n    )\n}\nfunction scaleBufferAround(scale: number, center?: [number, number]) {\n    const [dx, dy] = center ?? [(canvas.width - 1) / 2, (canvas.height - 1) / 2];\n\n    bufProps.mat = math.chain(\n        math.matrix([\n            [1, 0, dx],\n            [0, 1, dy],\n            [0, 0,  1],\n        ]),\n    ).multiply(\n        math.matrix([\n            [1 / scale,         0, 0],\n            [        0, 1 / scale, 0],\n            [        0,         0, 1],\n        ]),\n    ).multiply(\n        math.matrix([\n            [1, 0, -dx],\n            [0, 1, -dy],\n            [0, 0,   1],\n        ]),\n    ).multiply(\n        bufProps.mat\n    ).done();\n}\nfunction releaseBuffer() {\n    bufProps.refs = Math.max(bufProps.refs - 1, 0);\n}\nfunction clearBuffer() {\n    bufProps.refs = 0;\n}\n\nlet center = Complex.ZERO;\n\nfunction setCenter(c: Complex) {\n    center = c;\n\n    centerInputs[0].value = `${c.re}`;\n    centerInputs[1].value = `${c.im}`;\n    recenterButton.classList.toggle(\"hidden\", c.equals(0, 0));\n    homeButton.classList.toggle(\"hidden\", c.equals(0, 0) && scale === 2);\n    \n    updateDomain();\n}\n\n{\n    document.querySelectorAll<HTMLFormElement>(\"#center-controls form\").forEach(f => {\n        f.addEventListener(\"submit\", e => {\n            const re = +centerInputs[0].value;\n            const im = +centerInputs[1].value;\n            setCenter(Complex(re, im));\n        });\n    });\n    recenterButton.addEventListener(\"click\", e => {\n        setCenter(Complex.ZERO);\n    });\n}\n\n/**\n * Identifier designating the current graph.\n * This is a cyclic value, ranging the entire 32-bit range.\n */\nlet graphID = 0;\n\n/**\n * The scale of the graph represents the distance (in complex units) \n * from the center of the screen to the top.\n */\nlet scale = 2;\n\nfunction setScale(n: number, render = true) {\n    abortGraph();\n    n = Math.max(n, 0);\n    const scaleRatio = n / scale;\n\n    scale = n;\n    \n    // dirty zoom\n    if (render) {\n        copyToBuffer();\n        scaleBufferAround(scaleRatio);\n        drawBuffer();\n        releaseBuffer();\n    }\n\n    zoomInput.value = `${2 / scale}`;\n    zoomInput.style.width = `${zoomInput.value.length}ch`;\n\n    zoomButtons[1].disabled = scale === 2;\n    homeButton.classList.toggle(\"hidden\", center.equals(0, 0) && scale === 2);\n    \n    updateDomain();\n}\n\nfunction addZoom(mouseX: number, mouseY: number, deltaY: number) {\n    // negative = zoom out\n    // positive = zoom in\n\n    const factor = 2 ** (deltaY * 0.005);\n\n    const mousePos = convPlanes(mouseX, mouseY);\n    // keep the mousePos stable, but the distance from the original center needs to scale\n    const disp = mousePos.sub(center);\n    \n    setCenter(mousePos.sub(disp.mul(factor)));\n    setScale(scale * factor, false);\n    \n    scaleBufferAround(factor, [mouseX, mouseY]);\n    drawBuffer();\n}\n\n{\n    const [zoomIn, zoomReset, zoomOut] = zoomButtons;\n\n    zoomIn.addEventListener('click',    () => setScale(scale / 2));\n    zoomReset.addEventListener('click', () => setScale(2));\n    zoomOut.addEventListener('click',   () => setScale(scale * 2));\n}\n\nhomeButton.addEventListener(\"click\", () => {\n    const { width, height } = canvas;\n    const [scaleX, scaleY] = xyScale();\n\n    // 1 unit of scale\n    const [unitX, unitY] = [\n         (width  - 1) / 2,\n        -(height - 1) / 2\n    ];\n\n    const [dx, dy] = [center.re * unitX / scaleX, center.im * unitY / scaleY];\n    copyToBuffer();\n    translateBuffer(dx, dy);\n    drawBuffer();\n    releaseBuffer();\n    \n    setCenter(Complex.ZERO);\n    setScale(2);\n});\n\nfunction xyScale() {\n    return [\n        scale * canvas.width / canvas.height,\n        scale,\n    ] as const;\n}\nfunction updateDomain() {\n    const [scaleX, scaleY] = xyScale();\n\n    const range = Complex(scaleX, scaleY);\n\n    const cmL = center.sub(range);\n    const cmR = center.add(range);\n\n    // update domain display\n    domain[0].textContent = `${cmL}`;\n    domain[1].textContent = `${cmR}`;\n}\n\n/**\n * Function that takes the input complex value to the output one.\n * This is used in the z-coord display.\n * @param z input\n * @returns output\n */\nlet d: ComplexFunction | undefined = (z => z);\n\nlet worker: Worker;\nlet canNest: boolean;\n\n/**\n * On WebKit (iOS), nested Workers are not supported. So this worker tests if they are supported.\n * The result is then used to determine whether or not to use the full main worker or a fallback.\n */\nlet webkitTest = new Worker(new URL(\"./worker/webkitTest\", import.meta.url), {type: \"module\"});\nwebkitTest.postMessage(undefined);\nwebkitTest.onmessage = async function (e: MessageEvent<boolean>) {\n    graphStatus.textContent = \"Initializing workers...\";\n    await waitPageUpdate();\n    canNest = e.data;\n\n    worker = canNest \n        ? new Worker(new URL(\"./worker/main\", import.meta.url), {type: \"module\"}) \n        : new Worker(new URL(\"./worker/chunkLoader\", import.meta.url), {type: \"module\"});\n    \n    await initWorker(worker);\n\n    worker.onmessage = function (e: MessageEvent<MainOut>) {\n        let msg: MainOut = e.data;\n        if (msg.graphID !== graphID) return;\n    \n        if (msg.action === \"chunkDone\") {\n            displayChunk(msg);\n        } else if (msg.action === \"done\") {\n            markDone(msg.time);\n        } else {\n            let _: never = msg;\n        }\n    }\n    \n    worker.onerror = onComputeError;\n    graphButton.disabled = false;\n    webkitTest.terminate();\n\n    document.querySelectorAll(\".initializing\").forEach(e => e.classList.remove(\"initializing\"));\n    graph(); // Don't need to await it. We just want it to happen eventually.\n}\n\n/**\n * Calculate complex coordinates from the current mouse position\n */\nfunction fromMousePosition({pageX, pageY}: {pageX: number, pageY: number}) {\n    const x = pageX - canvas.offsetLeft;\n    const y = pageY - canvas.offsetTop;\n\n    const { width, height } = canvas.getBoundingClientRect();\n    if ( x < 0 || x >= width  ) return;\n    if ( y < 0 || y >= height ) return;\n\n    return convPlanes(x, y);\n}\n\n{\n    let hold = false;\n    let initX = 0, initY = 0;\n    let lastX = 0, lastY = 0;\n\n    canvas.addEventListener('mousedown', e => {\n        hold = true;\n        lastX = initX = e.clientX;\n        lastY = initY = e.clientY;\n\n        copyToBuffer();\n    });\n\n    document.addEventListener('mouseup', e => {\n        if (hold) {\n            hold = false;\n        \n            // if any displacement occurred, then redraw\n            const [dx, dy] = [\n                e.clientX - initX,\n                e.clientY - initY\n            ]\n\n            if (dx !== 0 || dy !== 0) graph();\n        }\n    });\n\n    document.addEventListener('mousemove', e => {\n        if (hold) {\n            abortGraph();\n            const [dx, dy] = [\n                e.clientX - lastX,\n                e.clientY - lastY\n            ]\n\n            translateBuffer(dx, dy);\n            drawBuffer();\n            setCenter(center.sub(convDisplace(dx, dy)));\n\n            lastX = e.clientX;\n            lastY = e.clientY;\n        }\n    });\n}\n\n{\n    let timeout: NodeJS.Timeout;\n    let started = false;\n\n    canvas.addEventListener(\"wheel\", e => {\n        e.preventDefault();\n        abortGraph();\n        clearTimeout(timeout);\n\n        if (!started) {\n            started = true;\n            // wheel start\n\n            copyToBuffer();\n        }\n        \n\n        // wheel move\n        if (e.ctrlKey) {\n            addZoom(e.clientX, e.clientY, e.deltaY);\n        } else {\n            const dx = e.deltaX * .5;\n            const dy = e.deltaY * .5;\n\n            translateBuffer(dx, dy);\n            drawBuffer();\n            setCenter(center.sub(convDisplace(dx, dy)));\n        }\n        \n        coordinateDisplay(e);\n\n        timeout = setTimeout(() => {\n            // wheel end\n            graph();\n            started = false;\n        }, 500);\n    }, false);\n}\n\n/**\n * Event listener that displays the complex coordinate of the mouse's current position.\n */\nasync function coordinateDisplay(...args: Parameters<typeof fromMousePosition>) {\n    const pos = fromMousePosition(...args);\n\n    if (typeof pos !== \"undefined\") {\n        const [zElem, fzElem] = zWrapperItems;\n        \n        zElem.textContent  = `${pos}`;\n        fzElem.textContent = `${d?.(pos) ?? \"?\"}`;\n    }\n};\ncanvas.addEventListener('mousemove', coordinateDisplay);\ncontrols.addEventListener('mousemove', coordinateDisplay);\ndocument.addEventListener(\"click\", coordinateDisplay);\n\n// Function input handlers:\n// funcInput.addEventListener('input', () => {\n//     funcInput.value = funcInput.value.replace(/[^a-zA-Z0-9+\\-*/^., ()!]/g, '');\n// });\n\nlet resizeCheck: NodeJS.Timer | undefined;\nwindow.addEventListener(\"resize\", e => {\n    if (typeof resizeCheck !== \"undefined\") clearTimeout(resizeCheck);\n    // if resize is done then perform recompute\n    resizeCheck = setTimeout(async () => await graph(), 200);\n});\n\ndocument.querySelector<HTMLFormElement>(\"form#zoom-form\")!.addEventListener(\"submit\", () => {\n    if (zoomInput.checkValidity()) setScale(2 / +zoomInput.value);\n});\n\n// For things that unconditionally graph after being pressed:\ndocument.querySelectorAll<HTMLFormElement>(\"form.graph-submit\").forEach(f => {\n    f.addEventListener(\"submit\", e => {\n        e.preventDefault();\n        graph();\n    });\n});\ndocument.querySelectorAll<HTMLButtonElement>(\"button.graph-submit\").forEach(b => {\n    b.addEventListener(\"click\", () => {\n        graph();\n    });\n});\n\nasync function graph() {\n    if (graphButton.disabled) return;\n\n    graphStatus.classList.remove(\"hidden\", \"error\", \"done\");\n    graphStatus.textContent = 'Graphing...'\n\n    await updateCanvasDims();\n    await waitPageUpdate();\n    \n    clearBuffer();\n    abortGraph();\n    let fstr = funcInput.value;\n    try {\n        const eva = evaluator.compile(fstr);\n        if (eva.type === \"function\") d = eva.f;\n        else d = () => eva.f;\n\n        startWorker(worker, fstr);\n    } catch (e) {\n        onComputeError(e as any);\n        throw e;\n    }\n}\n\n/**\n * @returns a promise that resolves when the DOM updates displaying\n */\nasync function waitPageUpdate() {\n    return new Promise<void>(resolve => {\n        requestAnimationFrame(() => { // this is called before update\n            requestAnimationFrame(() => resolve()); // this is called after update\n        });\n    })\n}\n\n/**\n * Converts xy canvas pixels to values in the complex plane\n * @param x x coord\n * @param y y coord\n * @returns Complex value\n */\nfunction convPlanes(x: number, y: number) {\n    // center point:\n    const [canvasCenterX, canvasCenterY] = [\n        (canvas.width  - 1) / 2,\n        (canvas.height - 1) / 2\n    ];\n\n    return center.add(convDisplace(\n        x - canvasCenterX,\n        y - canvasCenterY\n    ));\n}\n\n/**\n * Scale a change in displacement in canvas\n * @param dx pixels moved in the x-direction\n * @param dy pixels moved in the y-direction\n * @returns complex displacement\n */\nfunction convDisplace(dx: number, dy: number) {\n    const { width, height } = canvas;\n    const [scaleX, scaleY] = xyScale();\n\n    // 1 unit of scale\n    const [unitX, unitY] = [\n         (width  - 1) / 2,\n        -(height - 1) / 2\n    ];\n\n    return Complex(dx * scaleX / unitX, dy * scaleY / unitY);\n}\n\n/**\n * Call an \"init\" action on a worker to prepare it for work.\n * @param w Worker to initialize.\n * @returns promise that resolves once it finishes initialization.\n */\nasync function initWorker(w: Worker) {\n    let init: InitIn = { action: \"init\" };\n    w.postMessage(init);\n\n    return new Promise<void>(resolve => {\n        w.onmessage = function(e: MessageEvent<InitOut>) {\n            resolve();\n        }\n    });\n}\n\n/**\n * Instruct the worker to begin processing a function.\n * @param w the worker to instruct.\n * @param fstr the function input\n */\nfunction startWorker(w: Worker, fstr: string) {\n    graphID++;\n    graphID |= 0;\n    \n    let msg: MainIn = {\n        action: \"mainRequest\",\n        pev: partialEvaluate(fstr), \n        cd: {\n            width: canvas.width,\n            height: canvas.height,\n            center: [center.re, center.im],\n            scale,\n        },\n        graphID\n    };\n    w.postMessage(msg);\n}\n\nfunction abortGraph() {\n    graphID++;\n    graphID |= 0;\n}\n\n/**\n * Update the canvas with the loaded chunk\n * @param data the data from the worker\n */\n function displayChunk(data: LoaderOut) {\n    let {chunk, buf} = data;\n\n    let dat = new ImageData(new Uint8ClampedArray(buf), chunk.width, chunk.height);\n    ctx.putImageData(dat, chunk.offx, chunk.offy);\n}\n\n/**\n * Take a string and evaluate it for speed. Simplify the string and also apply the reciprocal optimization.\n * This partial evaluation can then be fully evaluated in the workers.\n * @param fstr string to partially evaluate\n * @returns partially evaluated string\n */\nfunction partialEvaluate(fstr: string): PartialEvaluator {\n    let node = math.simplify(fstr);\n\n    let inverse = false;\n    if (node.type == \"OperatorNode\" && node.fn == 'divide' && !isNaN(+node.args[0])) { // reciprocal func\n        node.args.reverse();\n        node = math.simplify(node);\n        inverse = true;\n    }\n\n    return { fstr: node.toString(), inverse };\n}\n\n/**\n * Display a done message with how long it took to complete\n * @param t time (in ms) it took for the operation to complete\n */\nasync function markDone(t: number) {\n    graphStatus.textContent = `Done in ${t}ms.`;\n    graphStatus.classList.add(\"done\");\n    \n    await waitPageUpdate();\n    clearStatusAfter();\n}\n\n/**\n * Handle errors in computation\n * @param e the error\n */\nfunction onComputeError(e: Error | ErrorEvent) {\n    let err = e instanceof ErrorEvent ? e.message : e;\n\n    graphStatus.classList.add('error');\n    graphStatus.textContent = String(err);\n}\n\n/**\n * Reset the status after a while.\n * @param after how many ms before status should be cleared.\n */\nfunction clearStatusAfter(after = 1000) {\n    setTimeout(() => {\n        if (graphStatus.classList.contains(\"done\")) {\n            graphStatus.classList.remove(\"done\");\n            graphStatus.classList.add(\"hidden\");\n        }\n    }, after);\n}\n\nfunction setProperty<P extends string | number | symbol, V>(o: {[I in P]: V}, p: P, v: V) {\n    if (o[p] !== v) o[p] = v;\n}","import { Complex } from \"complex.js\";\nexport { Complex };\n\n/**\n * Canvas dimension data (width and height), as well as the current zoom level\n */\nexport interface CanvasData {\n    width: number,\n    height: number,\n\n    center: [number, number],\n    scale: number,\n}\n\n/**\n * Chunk data designating the size of the chunk and its offset from (0, 0) in canvas\n */\nexport interface ChunkData {\n    width: number,\n    height: number,\n    offx: number,\n    offy: number\n}\n\n/**\n * A partially evaluated function string.\n * The string here is already simplified, and the reciprocal optimization has already been applied,\n * but the is not fully computed to allow it to be passed as a Worker message.\n */\nexport interface PartialEvaluator {\n    fstr: string,\n    inverse: boolean\n}\n\ntype Numeric = Complex | number;\n\ninterface FunctionEvaluator { \n    type: \"function\",\n    f: ComplexFunction\n}\ninterface ConstantEvaluator { \n    type: \"constant\",\n    f: Numeric\n}\n\n/**\n * A fully evaluated function.\n * This has the sufficient knowledge to compute an output color from an input complex number.\n */\nexport interface Evaluator {\n    evaluator: FunctionEvaluator | ConstantEvaluator,\n\n    /**\n     * Signifies whether to use the reciprocal optimization: bfunc(1 / fz) = 1 - bfunc(fz)\n     */\n    inverse: boolean\n}\n\n/**\n * A function that takes a complex number to another complex number\n */\nexport type ComplexFunction = (z: Complex) => Numeric;\n\nnamespace Messages {\n    /**\n     * A request to compute the function across an entire canvas\n     */\n    export interface MainRequest {\n        action: \"mainRequest\",\n        pev: PartialEvaluator,\n        cd: CanvasData,\n        graphID: number\n    };\n    \n    /**\n     * Designation that the canvas is fully computed\n     */\n    export interface GraphDone {\n        action: \"done\",\n        time: number,\n        graphID: number\n    };\n\n    /**\n     * A request to compute the function across a chunk\n     */\n    export interface ChunkRequest {\n        action: \"chunkRequest\",\n        pev: PartialEvaluator,\n        cd: CanvasData,\n        chunk: ChunkData,\n        graphID: number\n    };\n\n    /**\n     * Designation that the chunk is fully computed (with the computed data from the chunk)\n     */\n    export interface ChunkDone {\n        action: \"chunkDone\",\n        chunk: ChunkData,\n        buf: ArrayBuffer,\n        graphID: number\n    };\n\n    /**\n     * Call to initialize\n     */\n    export interface Init {\n        action: \"init\"\n    };\n\n    /**\n     * Return call to designate initialization completed\n     */\n    export interface Ready {\n        action: \"ready\"\n    }\n\n}\nexport type InitIn = Messages.Init;\nexport type InitOut = Messages.Ready;\n\nexport type MainIn = Messages.MainRequest;\nexport type MainOut = Messages.ChunkDone | Messages.GraphDone;\n\nexport type LoaderIn = Messages.ChunkRequest;\nexport type LoaderOut = Messages.ChunkDone;","import { all, create } from \"mathjs\";\nimport { Complex, ComplexFunction, Evaluator } from \"./types\";\nconst math = create(all);\n\nconst constants = {\n    \"pi\": Complex.PI,\n    \"e\": Complex.E,\n    \"i\": Complex.I,\n    \"inf\": Complex.INFINITY,\n    \"infinity\": Complex.INFINITY,\n    \"epsilon\": Complex.EPSILON,\n    \"nan\": Complex.NAN\n} as const;\n\nnamespace Results {\n    export interface Z {\n        type: \"z\"\n    }\n\n    export interface Constant {\n        type: \"constant\",\n        value: Complex | number\n    }\n\n    export interface ComplexMethod {\n        type: \"method\",\n        name: keyof Complex\n    }\n    \n    export interface Function {\n        type: \"function\",\n        f: ComplexFunction\n    }\n}\n\ntype LookupResult = Results.Z | Results.ComplexMethod | Results.Constant;\ntype FoldResult   = Results.Z | Results.Function | Results.Constant;\n\nfunction isComplexMethod(n: string): n is keyof Complex {\n    return n in Complex.I;\n}\nfunction getFrom<O>(o: O, k: string): O[keyof O] | void {\n    if (k in o) return (o as any)[k];\n}\n\nfunction lookup(n: math.SymbolNode): LookupResult {\n    let { name } = n;\n\n    name = name.toLowerCase();\n    if (name === \"z\") return { type: \"z\" };\n    if (isComplexMethod(name)) return { type: \"method\", name }\n    if (name in constants) return {\n        type: \"constant\", \n        value: constants[name as keyof typeof constants]\n    };\n    // if (name in functions) return {\n    //     type: \"function\",\n    //     f: functions[name]\n    // }\n\n    throw new Error(`Unrecognized symbol [${name}]`)\n}\n\nconst operatorMapping: {[s: string]: (a: Complex) => AcceptableReturn} = {\n    \"add\": (a: Complex) => a.add.bind(a),\n    \"unaryPlus\": (a: Complex) => () => a,\n    \"subtract\": (a: Complex) => a.sub.bind(a),\n    \"unaryMinus\": (a: Complex) => a.neg.bind(a),\n    \"multiply\": (a: Complex) => a.mul.bind(a),\n    \"divide\": (a: Complex) => a.div.bind(a),\n    \"pow\": (a: Complex) => a.pow.bind(a),\n    \"factorial\": (a: Complex) => () => math.gamma(a.add(1) as any),\n} as const;\n\nfunction unwrap(val: FoldResult, z: Complex): Complex | number {\n    if (val.type === \"constant\") return val.value;\n    if (val.type === \"function\") return val.f(z);\n    if (val.type === \"z\") return z;\n\n    let _: never = val;\n    throw new Error(`Unrecognized fold result ${(val as any).type}`);\n}\n\ntype AcceptableReturn =\n    | number\n    | ((this: Complex, ...args: any[]) => any)\nfunction makeFunction(\n    f: (a: Complex) => AcceptableReturn, \n    args: math.MathNode[], \n    allowFunctions: boolean\n): FoldResult | undefined {\n    // can only accept z OR number | Complex\n    // functions should not be allowed.\n    let fargs = args.map(node => fold(node));\n\n    // if all constants, this can be computed as a constant\n    if (fargs.every((a): a is Results.Constant => a.type === \"constant\")) {\n        const [self, ...rest] = fargs.map(c => c.value);\n\n        const cself = Complex(self);\n        const met = f(cself);\n\n        if (typeof met === \"number\") return { type: \"constant\", value: met };\n        return { type: \"constant\", value: met.bind(cself)(...rest) };\n    }\n\n    const [self, ...rest] = fargs;\n    if (allowFunctions) return {\n        type: \"function\",\n        f: z => {\n            let a = Complex(unwrap(self, z));\n            let b = rest.map(arg => unwrap(arg, z));\n\n            const met = f(a);\n\n            if (typeof met === \"number\" /* re, im */) return met;\n            return met.bind(a)(...b);\n        }\n    };\n}\n\nfunction fold(n: math.MathNode, allowFunctions: false): Results.Z | Results.Constant;\nfunction fold(n: math.MathNode, allowFunctions: true): FoldResult;\nfunction fold(n: math.MathNode): FoldResult;\nfunction fold(n: math.MathNode, allowFunctions: boolean = true): FoldResult {\n    switch (n.type) {\n        case \"ConstantNode\":\n            return { type: \"constant\", value: n.value };\n        case \"FunctionNode\": {\n            const lk = lookup(n.fn);\n\n            if (lk.type === \"method\") {\n                const f = makeFunction(a => a[lk.name], n.args, allowFunctions);\n                if (typeof f === \"undefined\") throw new Error(`Unexpected function [${lk.name}]`);\n                return f;\n            } else if (lk.type === \"constant\") {\n                throw new Error(`Expected function, got constant [${n.fn.name} = ${lk.value}]`);\n            } else if (lk.type === \"z\") {\n                throw new Error(`Expected function, got [z]`);\n            }\n\n            let _: never = lk;\n            throw new Error(`Expected function, got [${(lk as any).type}]`);\n        }\n        case \"OperatorNode\": {\n            const op = getFrom(operatorMapping, n.fn);\n            const f = op ? makeFunction(op, n.args, allowFunctions) : undefined;\n\n            if (typeof f === \"undefined\") throw new Error(`Unexpected operator [${n.op}]`);\n            return f;\n        }\n        case \"ParenthesisNode\":\n            return fold(n.content);\n        case \"SymbolNode\": {\n            const lk = lookup(n);\n            if (lk.type === \"method\") {\n                throw new Error(`Unexpected function [${n.name}]`);\n            }\n\n            return lk;\n        }\n        default:\n            throw new Error(`Cannot parse [${n.type}] into complex function`);\n    }\n}\n\nexport function compile(fstr: string): Evaluator[\"evaluator\"] {\n    const fr = fold(math.parse(fstr));\n\n    switch (fr.type) {\n        case \"constant\":\n            return {\n                type: \"constant\",\n                f: fr.value,\n            }\n        case \"function\":\n            return fr\n        case \"z\":\n            return {\n                type: \"function\",\n                f: z => z\n            }\n        default:\n            let _: never = fr;\n            throw new Error(`Invalid fold result type ${(fr as any).type}`);\n    }\n}","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dq1cl\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"egthy\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ainsM\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);"],"names":["$ccdddb66dd5c9e59$export$6503ec6e8aabbaf","$ccdddb66dd5c9e59$export$f7ad0328861e2f03","$ccdddb66dd5c9e59$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$jPsve","$hC7R7","$e3eae38bb1763d86$var$math","create","all","$e3eae38bb1763d86$var$constants","pi","Complex","PI","e","E","I","inf","INFINITY","infinity","epsilon","EPSILON","nan","NAN","$e3eae38bb1763d86$var$lookup","n","name","toLowerCase","type","$e3eae38bb1763d86$var$isComplexMethod","value","$e3eae38bb1763d86$var$operatorMapping","add","a","bind","unaryPlus","subtract","sub","unaryMinus","neg","multiply","mul","divide","div","pow","factorial","gamma","$e3eae38bb1763d86$var$unwrap","val","z","f","$e3eae38bb1763d86$var$makeFunction","args","allowFunctions","fargs","map","node","$e3eae38bb1763d86$var$fold","every","self","rest","c","cself","met","b","arg","lk","fn","op","o","k","$e3eae38bb1763d86$var$getFrom","undefined","content","$7b066cf9bf825db5$var$math","$7b066cf9bf825db5$var$wrapper","document","querySelector","$7b066cf9bf825db5$var$controls","$7b066cf9bf825db5$var$funcInput","$7b066cf9bf825db5$var$graphButton","$7b066cf9bf825db5$var$graphStatus","$7b066cf9bf825db5$var$zWrapperItems","querySelectorAll","$7b066cf9bf825db5$var$zoomButtons","$7b066cf9bf825db5$var$zoomInput","$7b066cf9bf825db5$var$centerInputs","$7b066cf9bf825db5$var$recenterButton","$7b066cf9bf825db5$var$homeButton","$7b066cf9bf825db5$var$domain","$7b066cf9bf825db5$var$canvas","createElement","$7b066cf9bf825db5$var$ctx","getContext","alpha","async","$7b066cf9bf825db5$var$updateCanvasDims","$7b066cf9bf825db5$var$waitPageUpdate","width","height","getBoundingClientRect","$7b066cf9bf825db5$var$setProperty","Math","trunc","globalCompositeOperation","$7b066cf9bf825db5$var$updateDomain","appendChild","$7b066cf9bf825db5$var$bufCanvas","$7b066cf9bf825db5$var$bctx","$7b066cf9bf825db5$var$bufProps","refs","mat","identity","$7b066cf9bf825db5$var$copyToBuffer","imageSmoothingEnabled","drawImage","$7b066cf9bf825db5$var$drawBuffer","setTransform","get","resetTransform","$7b066cf9bf825db5$var$translateBuffer","dx","dy","matrix","$7b066cf9bf825db5$var$scaleBufferAround","scale1","center1","chain","done","$7b066cf9bf825db5$var$releaseBuffer","max","$7b066cf9bf825db5$var$center","ZERO","$7b066cf9bf825db5$var$setCenter","re","im","classList","toggle","equals","$7b066cf9bf825db5$var$scale","forEach","addEventListener","$7b066cf9bf825db5$var$graphID","$7b066cf9bf825db5$var$setScale","render","$7b066cf9bf825db5$var$abortGraph","scaleRatio","style","disabled","zoomIn","zoomReset","zoomOut","$7b066cf9bf825db5$var$xyScale","scaleX","scaleY","range","cmL","cmR","textContent","unitX","unitY","$7b066cf9bf825db5$var$worker","$7b066cf9bf825db5$var$canNest","$7b066cf9bf825db5$var$d","$3c5948be07c71a88$exports","workerUrl","origin","isESM","location","source","stringify","URL","createObjectURL","Blob","$392807f48fc53276$var$url","resolve","import","meta","url","$392807f48fc53276$exports","toString","$7b066cf9bf825db5$var$webkitTest","Worker","postMessage","$ce2028ebd3de55c5$var$url","$ce2028ebd3de55c5$exports","$7b066cf9bf825db5$var$resizeCheck","$19e0631a78af0647$var$url","$19e0631a78af0647$exports","onmessage","e1","data","w","init","action","Promise","$7b066cf9bf825db5$var$initWorker","msg","graphID","chunk","buf","dat","ImageData","Uint8ClampedArray","putImageData","offx","offy","$7b066cf9bf825db5$var$displayChunk","t","after","setTimeout","contains","remove","$7b066cf9bf825db5$var$clearStatusAfter","$7b066cf9bf825db5$var$markDone","time","onerror","$7b066cf9bf825db5$var$onComputeError","terminate","$7b066cf9bf825db5$var$graph","hold","initX","initY","lastX","lastY","clientX","clientY","$7b066cf9bf825db5$var$convDisplace","timeout","started","preventDefault","clearTimeout","ctrlKey","mouseX","mouseY","deltaY","factor","mousePos","$7b066cf9bf825db5$var$convPlanes","disp","$7b066cf9bf825db5$var$addZoom","deltaX","$7b066cf9bf825db5$var$coordinateDisplay","pos","pageX","pageY","x","offsetLeft","y","offsetTop","$7b066cf9bf825db5$var$fromMousePosition","zElem","fzElem","fstr","eva","fr","$e3eae38bb1763d86$export$ef7acd7185315e22","pev","$7b066cf9bf825db5$var$partialEvaluate","cd","center","$7b066cf9bf825db5$var$startWorker","requestAnimationFrame","canvasCenterX","canvasCenterY","simplify","inverse","isNaN","reverse","err","ErrorEvent","message","String","p","v","window","checkValidity"],"version":3,"file":"complexgrapher.0a6af6c9.js.map"}