{"mappings":"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","sources":["src/gradient/gradient.ts"],"sourcesContent":["declare var OffscreenCanvas: any;\n\nconst canvas = document.querySelector('canvas')! as HTMLCanvasElement;\nconst ctx = canvas.getContext('2d')!;\nlet ipol = 'lin';\n\nlet ipolRadios = document.querySelectorAll('input[type=radio]'),\n    coloradd = document.querySelector('#coloradd')! as HTMLButtonElement,\n    colorsWrapper = document.querySelector('#colors')! as HTMLDivElement;\n\ntype RGB = [number, number, number];\n\ndocument.querySelectorAll('input[type=color]').forEach(x => x.addEventListener('change', update))\nipolRadios.forEach(x => x.addEventListener('change', e => {\n    ipol = (x as HTMLInputElement).value;\n    update();\n}));\n\ncoloradd.addEventListener('click', () => {\n    let div = colorDiv();\n    colorsWrapper.insertBefore(div, coloradd);\n\n    let buts = colorRMButtons();\n    if (buts.length > 2) {\n        for (let b of buts) {\n            b.disabled = false;\n        }\n    }\n    update();\n})\n\ndocument.querySelectorAll('.colorrm').forEach(e => e.addEventListener('click', () => {\n    colorsWrapper.removeChild(e.parentElement!);\n    let buts = colorRMButtons();\n    if (buts.length < 3) {\n        for (let b of buts) b.disabled = true;\n    }\n    update();\n}))\nupdate();\n\nfunction getColors() {\n    let cinputs =  document.querySelectorAll('input[type=color]');\n    return [...cinputs].map(x => (x as HTMLInputElement).value);\n}\n\nfunction rgb(hex: string): RGB {\n    return [hex.slice(1,3), hex.slice(3,5), hex.slice(5,7)].map(x => parseInt(x, 16)) as RGB;\n}\n\nfunction colorRMButtons() {\n    return document.querySelectorAll('.colorrm') as NodeListOf<HTMLButtonElement>;\n}\n\nfunction interpolate(a: number, b: number, prog: number) {\n    return Math.hypot(a * Math.sqrt(1 - prog), b * Math.sqrt(prog));\n}\nfunction colorDiv(hex = '#000000') {\n    let div = document.createElement('div');\n\n    let clr = document.createElement('input');\n    clr.type = 'color';\n    clr.value = hex;\n    clr.addEventListener('change', update);\n\n    let button = document.createElement('button');\n    button.classList.add('colorrm');\n    button.textContent = 'x';\n    button.addEventListener('click', () => {\n        colorsWrapper.removeChild(button.parentElement!);\n        let buts = colorRMButtons();\n        if (buts.length < 3) {\n            for (let b of buts) b.disabled = true;\n        }\n        update();\n    });\n        \n    div.appendChild(clr);\n    div.appendChild(button);\n    return div;\n}\n\nfunction update() {\n    let clrs = getColors();\n    let lind = clrs.length - 1;\n    switch (ipol) {\n        case 'lin':\n            let grad = ctx.createLinearGradient(0, 0, canvas.width, 0);\n            for (var [i, c] of clrs.entries()) grad.addColorStop(i / lind, c);\n            ctx.fillStyle = grad;\n            break;\n        case 'rms':\n            let ocanvas: HTMLCanvasElement;\n            if (\"OffscreenCanvas\" in globalThis) {\n                ocanvas = new OffscreenCanvas(canvas.width, 1);\n            } else {\n                ocanvas = document.createElement('canvas');\n                [ocanvas.width, ocanvas.height] = [canvas.width, 1];\n            }\n            let octx = ocanvas.getContext('2d')!;\n\n            let dat = octx.createImageData(ocanvas.width, 1);\n            let arr32 = new Uint32Array(dat.data.buffer);\n            let arrlind = arr32.length - 1;\n            for (var i = 0; i < arr32.length; i++) {\n                let pos = (i / arrlind) * lind;\n                let [j, prog] = [Math.floor(pos), pos % 1];\n                let [a, b] = [clrs[j], clrs[j + 1] ?? '#000000'].map(x => rgb(x));\n                let c = Array.from({length: 3}, (_, i) => interpolate(a[i], b[i], prog));\n                arr32[i] = 0xFF << 24\n                         | c[2] << 16\n                         | c[1] <<  8\n                         | c[0] <<  0;\n            }\n            octx.putImageData(dat, 0, 0);\n            let pat = ctx.createPattern(ocanvas, 'repeat-y')!;\n            ctx.fillStyle = pat;\n            break;\n\n    }\n\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n}"],"names":["_arrayLikeToArray","arr","len","canvas","document","querySelector","ctx","getContext","ipol","ipolRadios","querySelectorAll","coloradd","colorsWrapper","getColors","_toConsumableArray","map","x","value","rgb","hex","slice","parseInt","colorRMButtons","interpolate","a","b","prog","Math","hypot","sqrt","colorDiv","arguments","length","div","createElement","clr","type","addEventListener","update","button","classList","add","textContent","removeChild","parentElement","buts","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","disabled","err","return","appendChild","clrs","lind","grad","createLinearGradient","width","entries","_value","_slicedToArray","i1","c","addColorStop","fillStyle","ocanvas","ref1","pos","arrlind","ref","floor","j","ref2","Array","from","_","i","arr32","globalThis","OffscreenCanvas","ref3","height","octx","dat","createImageData","Uint32Array","data","buffer","_loop","putImageData","pat","createPattern","fillRect","forEach","e","insertBefore"],"version":3,"file":"gradient.488d8aac.js.map"}