{"mappings":"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","sources":["src/gradient/gradient.ts"],"sourcesContent":["declare var OffscreenCanvas: any;\n\nconst canvas = document.querySelector('canvas')! as HTMLCanvasElement;\nconst ctx = canvas.getContext('2d')!;\nlet ipol = 'lin';\n\nlet ipolRadios = document.querySelectorAll('input[type=radio]'),\n    coloradd = document.querySelector('#coloradd')! as HTMLButtonElement,\n    colorsWrapper = document.querySelector('#colors')! as HTMLDivElement;\n\ntype RGB = [number, number, number];\n\ndocument.querySelectorAll('input[type=color]').forEach(x => x.addEventListener('change', update))\nipolRadios.forEach(x => x.addEventListener('change', e => {\n    ipol = (x as HTMLInputElement).value;\n    update();\n}));\n\ncoloradd.addEventListener('click', () => {\n    let div = colorDiv();\n    colorsWrapper.insertBefore(div, coloradd);\n\n    let buts = colorRMButtons();\n    if (buts.length > 2) {\n        for (let b of buts) {\n            b.disabled = false;\n        }\n    }\n    update();\n})\n\ndocument.querySelectorAll('.colorrm').forEach(e => e.addEventListener('click', () => {\n    colorsWrapper.removeChild(e.parentElement!);\n    let buts = colorRMButtons();\n    if (buts.length < 3) {\n        for (let b of buts) b.disabled = true;\n    }\n    update();\n}))\nupdate();\n\nfunction getColors() {\n    let cinputs =  document.querySelectorAll('input[type=color]');\n    return [...cinputs].map(x => (x as HTMLInputElement).value);\n}\n\nfunction rgb(hex: string): RGB {\n    return [hex.slice(1,3), hex.slice(3,5), hex.slice(5,7)].map(x => parseInt(x, 16)) as RGB;\n}\n\nfunction colorRMButtons() {\n    return document.querySelectorAll('.colorrm') as NodeListOf<HTMLButtonElement>;\n}\n\nfunction interpolate(a: number, b: number, prog: number) {\n    return Math.hypot(a * Math.sqrt(1 - prog), b * Math.sqrt(prog));\n}\nfunction colorDiv(hex = '#000000') {\n    let div = document.createElement('div');\n\n    let clr = document.createElement('input');\n    clr.type = 'color';\n    clr.value = hex;\n    clr.addEventListener('change', update);\n\n    let button = document.createElement('button');\n    button.classList.add('colorrm');\n    button.textContent = 'x';\n    button.addEventListener('click', () => {\n        colorsWrapper.removeChild(button.parentElement!);\n        let buts = colorRMButtons();\n        if (buts.length < 3) {\n            for (let b of buts) b.disabled = true;\n        }\n        update();\n    });\n        \n    div.appendChild(clr);\n    div.appendChild(button);\n    return div;\n}\n\nfunction update() {\n    let clrs = getColors();\n    let lind = clrs.length - 1;\n    switch (ipol) {\n        case 'lin':\n            let grad = ctx.createLinearGradient(0, 0, canvas.width, 0);\n            for (var [i, c] of clrs.entries()) grad.addColorStop(i / lind, c);\n            ctx.fillStyle = grad;\n            break;\n        case 'rms':\n            let ocanvas: HTMLCanvasElement;\n            if (\"OffscreenCanvas\" in globalThis) {\n                ocanvas = new OffscreenCanvas(canvas.width, 1);\n            } else {\n                ocanvas = document.createElement('canvas');\n                [ocanvas.width, ocanvas.height] = [canvas.width, 1];\n            }\n            let octx = ocanvas.getContext('2d')!;\n\n            let dat = octx.createImageData(ocanvas.width, 1);\n            let arr32 = new Uint32Array(dat.data.buffer);\n            let arrlind = arr32.length - 1;\n            for (var i = 0; i < arr32.length; i++) {\n                let pos = (i / arrlind) * lind;\n                let [j, prog] = [Math.floor(pos), pos % 1];\n                let [a, b] = [clrs[j], clrs[j + 1] ?? '#000000'].map(x => rgb(x));\n                let c = Array.from({length: 3}, (_, i) => interpolate(a[i], b[i], prog));\n                arr32[i] = 0xFF << 24\n                         | c[2] << 16\n                         | c[1] <<  8\n                         | c[0] <<  0;\n            }\n            octx.putImageData(dat, 0, 0);\n            let pat = ctx.createPattern(ocanvas, 'repeat-y')!;\n            ctx.fillStyle = pat;\n            break;\n\n    }\n\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n}"],"names":["canvas","document","querySelector","ctx","getContext","ipol","ipolRadios","querySelectorAll","coloradd","colorsWrapper","getColors","map","x","value","rgb","hex","slice","parseInt","colorRMButtons","interpolate","a","b","prog","Math","hypot","sqrt","colorDiv","div","createElement","clr","type","addEventListener","update","button","classList","add","textContent","removeChild","parentElement","buts","length","disabled","appendChild","clrs","lind","grad","createLinearGradient","width","i","c","entries","addColorStop","fillStyle","ocanvas","globalThis","OffscreenCanvas","height","octx","dat","createImageData","arr32","Uint32Array","data","buffer","arrlind","pos","j","floor","Array","from","_","putImageData","pat","createPattern","fillRect","forEach","e","insertBefore"],"version":3,"file":"gradient.3d3439b7.js.map"}